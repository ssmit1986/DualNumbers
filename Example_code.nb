Notebook[{

Cell[CellGroupData[{
Cell["DualNumbers", \
"Section",ExpressionUUID->"8ee5ae86-a341-4457-8275-7b676122c998"],

Cell[CellGroupData[{

Cell["Code from the README file", \
"Subsection",ExpressionUUID->"1bac6c56-1e77-46ba-80a7-2e06ea470861"],

Cell[CellGroupData[{

Cell["Installation", \
"Subsubsection",ExpressionUUID->"3c79962b-7dde-4a2d-bcef-7a171664d20f"],

Cell["Install the paclet:", \
"Text",ExpressionUUID->"62ab5172-7515-474e-b58d-82c53aa14e6a"],

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  "\"\<https://github.com/ssmit1986/DualNumbers/releases/download/v1.3.0/\
DualNumbers-1.3.0.paclet\>\"", 
  "]"}]], "Input",ExpressionUUID->"0cb9b1cb-4882-46ae-b86d-a755e0d7c69a"],

Cell["\<\
or, if you want to load the source code, point the PacletManager at the \
cloned repository:\
\>", "Text",ExpressionUUID->"28f45967-93e7-4046-8b32-cf276cc7b22c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DualNumbers\>\""}], 
     "}"}], "]"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"4383d9de-ab7f-4838-b1b9-adf412cfdfe7"],

Cell["Load the paclet:", \
"Text",ExpressionUUID->"5f738776-bbae-4a74-ad28-c0a67f4d5a01"],

Cell[BoxData[
 RowBox[{"<<", 
  "DualNumbers`"}]], \
"Input",ExpressionUUID->"97772dfb-291f-4d8b-91ce-a9ba88494cef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dual", "[", 
  RowBox[{"1", ",", "2"}], 
  "]"}]], "Input",ExpressionUUID->"97b62626-abb5-47c6-a458-d040221bb053"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", 
   RowBox[{"2", " ", "\[CurlyEpsilon]"}]}],
  DualNumbers`Dual[
  1, 2]]], "Output",ExpressionUUID->"e84b4fef-d18a-4dbb-b284-0633dfae194b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", \
"Subsubsection",ExpressionUUID->"19e093bd-fac8-4ad2-a2ff-6d5cc419064d"],

Cell[TextData[{
 "Expand ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "ada4410b-a711-4a68-868a-caa2ffdb21c7"],
 " as a series in ",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{"\[CurlyEpsilon]", " ", 
     RowBox[{"(", "CurlyEpsilon", ")"}]}],
    BaseStyle->"Link",
    ButtonData->"paclet:ref/character/CurlyEpsilon"], TraditionalForm]],
  ExpressionUUID->"9540089d-7a1f-4c6c-88f1-0eb2fdb4d8ed"]
}], "Text",ExpressionUUID->"d212c0cc-0228-4e55-8dfe-a522fe2bf7b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", "+", 
       RowBox[{"b", " ", "\[CurlyEpsilon]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CurlyEpsilon]", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "/.", 
  RowBox[{
   RowBox[{"Power", "[", 
    RowBox[{"\[CurlyEpsilon]", ",", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{"GreaterEqualThan", "[", "2", "]"}], ")"}]}]}], "]"}], 
   "\[Rule]", 
   "0"}]}]], "Input",ExpressionUUID->"f0bae856-24a1-4159-aa47-a10dfb05f413"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "a", "]"}], "+", 
  RowBox[{"b", " ", "\[CurlyEpsilon]", " ", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]",
     MultilineFunction->None], "[", "a", 
    "]"}]}]}]], \
"Output",ExpressionUUID->"c73936d8-a464-4d12-ab20-d01d28809e23"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox["DualSimplify",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "8be093ef-f295-42ad-a3d1-a2313ea2e516"],
 " does this automatically:"
}], "Text",ExpressionUUID->"13fb8ec4-9707-427e-9e68-9d89f401a6fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DualSimplify", "[", 
  RowBox[{"f", "[", 
   RowBox[{"a", "+", 
    RowBox[{"b", " ", "\[CurlyEpsilon]"}]}], "]"}], 
  "]"}]], "Input",ExpressionUUID->"a9a4f68a-8e77-483e-a5fd-6bc860934c0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "a", "]"}], "+", 
  RowBox[{"b", " ", "\[CurlyEpsilon]", " ", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]",
     MultilineFunction->None], "[", "a", 
    "]"}]}]}]], \
"Output",ExpressionUUID->"bfb2f911-8796-450a-b224-49b277ab8de8"]
}, Open  ]],

Cell["Example of a function with no symbolic derivative:", \
"Text",ExpressionUUID->"0c40e998-ccc6-41bf-8abf-d01df3c6871c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "=", "1."}], ",", "y", ",", 
       RowBox[{"i", "=", "0"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", "=", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "x"}], "]"}]}], ")"}], "\[Equal]", "x"}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"x", "=", "y"}], ";", "\[IndentingNewLine]", 
         RowBox[{"i", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", "x"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Derivative", "[", "1", "]"}], "@", 
  "f"}]}], "Input",ExpressionUUID->"f1ad9e51-c055-44b9-b71d-e2688a2d81ba"],

Cell[BoxData[
 RowBox[{"0", 
  "&"}]], "Output",ExpressionUUID->"117660bd-5b07-424c-b894-135466d71215"]
}, Open  ]],

Cell["Calculate the derivative by using a dual number as input:", \
"Text",ExpressionUUID->"db076d2c-73d1-4295-ac01-ec1e9b4b9ce3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d", "=", 
  RowBox[{"f", "[", 
   RowBox[{"Dual", "[", 
    RowBox[{"0.5", ",", "1."}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Standard", "[", "d", "]"}], "\n", 
 RowBox[{"NonStandard", "[", "d", 
  "]"}]}], "Input",ExpressionUUID->"4c18e64e-555b-48f6-acb8-284dd3b85dbe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"0.900367222589753`", "\[VeryThinSpace]", "-", 
   RowBox[{"0.3217712605132238`", " ", "\[CurlyEpsilon]"}]}],
  DualNumbers`Dual[
  0.900367222589753, -0.3217712605132238]]], \
"Output",ExpressionUUID->"8c6726af-1d20-47fa-85d8-a62370ce54ad"],

Cell[BoxData["0.900367222589753`"], \
"Output",ExpressionUUID->"b8b2a655-6b58-4bb7-8ec3-60c713d3fad4"],

Cell[BoxData[
 RowBox[{"-", 
  "0.3217712605132238`"}]], \
"Output",ExpressionUUID->"7519ee28-e685-40b5-91f5-0b075f8b1fc9"]
}, Open  ]],

Cell["Verify with a differential quotient:", \
"Text",ExpressionUUID->"5367ac52-bfd1-40de-9a1d-65275cdee759"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"h", "=", "0.001"}], ",", 
     RowBox[{"a", "=", "0.5"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", "h"}], "]"}], "-", 
      RowBox[{"f", "[", 
       RowBox[{"a", "-", "h"}], "]"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "h"}], ")"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"f0c8efd2-a193-4511-ad6d-1c5cc76a74d7"],

Cell[BoxData[
 RowBox[{"-", 
  "0.32177100547187143`"}]], \
"Output",ExpressionUUID->"590c58f7-9600-4664-9219-0653175612c7"]
}, Open  ]],

Cell["The nonstandard part does not even need to be numeric:", \
"Text",ExpressionUUID->"8ceea3e3-8a96-4b3d-9aaa-3ee96f051edd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"Dual", "[", 
   RowBox[{"0.5", ",", "b"}], "]"}], 
  "]"}]], "Input",ExpressionUUID->"e1b6a71a-1a67-4c72-8e55-0436bce49fd9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"0.900367222589753`", "\[VeryThinSpace]", "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.3217712605132238`", " ", "b"}], ")"}], " ", 
    "\[CurlyEpsilon]"}]}],
  DualNumbers`Dual[
  0.900367222589753, (-0.3217712605132238) $CellContext`b]]], \
"Output",ExpressionUUID->"d8627b31-f338-4fd8-9fe7-2dc822baa46b"]
}, Open  ]],

Cell[TextData[{
 "Numeric dual numbers can be compared with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Equal", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Equal",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4e36d188-839f-4917-8f02-70b86361ba2e"],
 ", ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Less", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Less",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5b04f718-9fa4-437a-b484-9c0a494237d8"],
 ", ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Greater", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Greater",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "137b26b7-d08b-4cfb-b9a5-f0673d791cad"],
 ", etc. Symbolic dual numbers remain unaffected:"
}], "Text",ExpressionUUID->"b281d883-4028-45bc-a08d-aa0c802ac860"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dual", "[", 
   RowBox[{"0.5", ",", "1"}], "]"}], "\[Equal]", "0.5"}], "\n", 
 RowBox[{
  RowBox[{"Dual", "[", 
   RowBox[{"0.5", ",", "1"}], "]"}], "\[Equal]", 
  RowBox[{"Dual", "[", 
   RowBox[{"0.5", ",", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dual", "[", 
   RowBox[{"x", ",", "1"}], "]"}], "\[Equal]", 
  RowBox[{"Dual", "[", 
   RowBox[{"y", ",", "2"}], 
   "]"}]}]}], "Input",ExpressionUUID->"3412a10d-c2cb-4e60-9d6d-a9d0944d0b25"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"5a73f721-736b-4a2d-9df4-2405980487f2"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"03f44947-84aa-43f6-8908-92ebc1868478"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   RowBox[{"x", "+", 
    RowBox[{"1", " ", "\[CurlyEpsilon]"}]}],
   DualNumbers`Dual[$CellContext`x, 1]], "\[Equal]", 
  InterpretationBox[
   RowBox[{"y", "+", 
    RowBox[{"2", " ", "\[CurlyEpsilon]"}]}],
   DualNumbers`Dual[$CellContext`y, 
    2]]}]], "Output",ExpressionUUID->"24826ae4-8d33-4361-a0da-c2a11035a33d"]
}, Open  ]],

Cell["\<\
Calculate the derivatives of a 2-argument function and compare with the \
gradient calculated symbolically:\
\>", "Text",ExpressionUUID->"cc768077-957b-4438-9f04-ddd1334cf38f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", "*", "y"}], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"y", "^", "2"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"d", "=", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{
     RowBox[{"Dual", "[", 
      RowBox[{"0.5", ",", "b1"}], "]"}], ",", 
     RowBox[{"Dual", "[", 
      RowBox[{"2.", ",", "b2"}], "]"}]}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"grad", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.5"}], ",", 
     RowBox[{"y", "\[Rule]", "2."}]}], 
    "}"}]}]}]}], \
"Input",ExpressionUUID->"83d45a49-1509-49f4-b53d-565f75982a08"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"0.19799317289597565`", "\[VeryThinSpace]", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.20767327972713032`", " ", "b1"}], "-", 
      RowBox[{"0.12278153850584299`", " ", "b2"}]}], ")"}], " ", 
    "\[CurlyEpsilon]"}]}],
  DualNumbers`Dual[
  0.19799317289597565`, 0.20767327972713032` $CellContext`b1 - 
   0.12278153850584299` $CellContext`b2]]], \
"Output",ExpressionUUID->"e347061d-2bfc-409d-9d16-1015b3c14aa6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.20767327972713032`", ",", 
   RowBox[{"-", "0.12278153850584299`"}]}], 
  "}"}]], "Output",ExpressionUUID->"0b4cc2f7-1fb2-496c-85c1-b12b59da4d92"]
}, Open  ]],

Cell[TextData[{
 "The following relation holds for the directional derivative calculated for ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "ea42a7a4-3bb0-48ac-9dfc-a7ab030abeb9"]
}], "Text",ExpressionUUID->"a7e08957-e6f8-4832-bdeb-50f93a971010"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NonStandard", "[", "d", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b1", ",", "b2"}], "}"}], ".", 
   "grad"}]}]], \
"Input",ExpressionUUID->"2a5632f8-1447-4c5e-9cea-b4e7f1465746"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"1b5e0991-710b-4f3e-8072-42140e064518"]
}, Open  ]],

Cell[TextData[{
 "If you use numeric nonstandard parts, the only way to get the full gradient \
of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "a11916ae-f966-4b9f-825d-d260784681d1"],
 " is by evaluating it twice:"
}], "Text",ExpressionUUID->"aa1292ab-2b69-4d4b-9520-8763bd1ac46e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{
     RowBox[{"Dual", "[", 
      RowBox[{"0.5", ",", "1."}], "]"}], ",", "2."}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"0.5", ",", 
     RowBox[{"Dual", "[", 
      RowBox[{"2.", ",", "1."}], "]"}]}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NonStandard", "[", "%", "]"}], "\[Equal]", 
  "grad"}]}], "Input",ExpressionUUID->"c5ed9fc2-aca7-4802-b9a4-c083492bdaf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"0.19799317289597565`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.20767327972713032`", " ", "\[CurlyEpsilon]"}]}],
    DualNumbers`Dual[0.19799317289597565`, 0.20767327972713032`]], ",", 
   InterpretationBox[
    RowBox[{"0.19799317289597565`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.12278153850584299`", " ", "\[CurlyEpsilon]"}]}],
    DualNumbers`Dual[0.19799317289597565`, -0.12278153850584299`]]}], 
  "}"}]], "Output",ExpressionUUID->"3fdd4c85-2f71-455e-8e3a-8447fd5335b4"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"28371fcb-6248-43dd-830b-568d637662a1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Dual arrays", \
"Subsubsection",ExpressionUUID->"c998eb02-299e-424c-9747-61bbef47c8aa"],

Cell["\<\
Define a list of dual numbers. You can take the inner product like with \
normal numbers:\
\>", "Text",ExpressionUUID->"a05d593e-96dd-443b-bf68-777a706baf2a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dvec", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Dual", "[", 
     RowBox[{"#", ",", "1."}], "]"}], "&"}], "/@", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", "5"}], "]"}]}]}], "\n", 
 RowBox[{"dvec", ".", 
  "dvec"}]}], "Input",ExpressionUUID->"f2e79813-517e-4913-958c-7e436a477fc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"0.9486797196995336`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.`", " ", "\[CurlyEpsilon]"}]}],
    DualNumbers`Dual[0.9486797196995336, 1.]], ",", 
   InterpretationBox[
    RowBox[{"0.19217015396790416`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.`", " ", "\[CurlyEpsilon]"}]}],
    DualNumbers`Dual[0.19217015396790416`, 1.]], ",", 
   InterpretationBox[
    RowBox[{"0.9415694352820774`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.`", " ", "\[CurlyEpsilon]"}]}],
    DualNumbers`Dual[0.9415694352820774, 1.]], ",", 
   InterpretationBox[
    RowBox[{"0.40538001412187086`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.`", " ", "\[CurlyEpsilon]"}]}],
    DualNumbers`Dual[0.40538001412187086`, 1.]], ",", 
   InterpretationBox[
    RowBox[{"0.7942528810882226`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.`", " ", "\[CurlyEpsilon]"}]}],
    DualNumbers`Dual[0.7942528810882226, 1.]]}], 
  "}"}]], "Output",ExpressionUUID->"ef43273c-82ad-46fe-995c-0f03bcd192df"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2.618646175069034`", "\[VeryThinSpace]", "+", 
   RowBox[{"6.564104408319217`", " ", "\[CurlyEpsilon]"}]}],
  DualNumbers`Dual[
  2.618646175069034, 
   6.564104408319217]]], \
"Output",ExpressionUUID->"f4074beb-7598-4e68-afdd-f20625d95376"]
}, Open  ]],

Cell["This format is quite slow for large numbers, though:", \
"Text",ExpressionUUID->"25b49340-e20d-41a9-b752-92712e7f54bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dvec", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Dual", "[", 
      RowBox[{"#", ",", "1."}], "]"}], "&"}], "/@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"1", ",", 
      RowBox[{"10", "^", "3"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dvec", ".", "dvec"}], "//", 
  "RepeatedTiming"}]}], \
"Input",ExpressionUUID->"e14d81d2-2478-4d2b-b9ee-117e6f2574c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00664641015625`", ",", 
   InterpretationBox[
    RowBox[{"330.36765257944734`", "\[VeryThinSpace]", "+", 
     RowBox[{"993.213534379704`", " ", "\[CurlyEpsilon]"}]}],
    DualNumbers`Dual[330.36765257944734`, 993.213534379704]]}], 
  "}"}]], "Output",ExpressionUUID->"24e72e97-afdd-4705-b1a9-87ffd510fb07"]
}, Open  ]],

Cell["Convert the list to a more efficient format:", \
"Text",ExpressionUUID->"f413bb78-68b5-4fa2-ac81-76701079f1f9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dvecPacked", "=", 
   RowBox[{"PackDualArray", "[", "dvec", "]"}]}], ";"}], "\n", 
 RowBox[{"dvecPacked", "//", 
  "Short"}]}], "Input",ExpressionUUID->"371997b7-b9d2-4c0b-a96e-fc214cf44cf6"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{
    TagBox["Dual",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{
        False -> GridBox[{{
            "\"{\[Ellipsis]} + \[CurlyEpsilon] {\[Ellipsis]}\"", 
             GridBox[{{
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"\[Times]", "\"\[Times]\"", "1000"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> 
         GridBox[{{"\"{\[Ellipsis]} + \[CurlyEpsilon] {\[Ellipsis]}\"", 
             GridBox[{{
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{"\[Times]", "\"\[Times]\"", "1000"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   DualNumbers`Dual[CompressedData["
1:eJwVmHk0lP8fxYcKqSQtZClJSBuFJLmSSptERQiVCkmUJKmGkLIkUiqVtSQV
QpQY+xbGOoPBLJYxC75CKun3/P55zplznjnnM+/Pfd/7urPq9CXLsyIkEok7
i3j0VXyVCQmEItOVdrGUhqDW0rbdnj2wrFnYVMcdhrKr1dKM96UgKXI46n9v
w0nn4eJDY4nwu9tgMmunEMz7vGG7pq9wFxOd+qXWBTkV7+v7xAdB2q8b8UDp
Oyw7VaInk4cwrjDXXW9qADaiHRI8Vy4ez1l7Mc2SC2ndTXKvT5XBooqlIDrQ
DOPtDF+KbQlEGTnGUj0chHTHBnC/9MOdPXZtYzkXCdQoqZnbXDjtPlh/d4SG
LxFzmuNnhpE2ceWWl34dfMwWpLJd+5AWbrjo0XcuqPN7Jtb2VYKROFi5T5QJ
l7NH/pM8U4PxoOmPEkfZ+H6FZaiuOYhqN2Xx8egOZCZ3Ru6uZSPO31P0zPwh
SJOLVDY//QZDfWcv2zt0kF3q5kh6P8Ow77aTnWIsLOktkVt/oh1T4R6D7ial
oLwOPm+Vkwvlla777r+oxHo2jSKi1QRPsas3aq7mI+3d9cP+BlSYGKxaUhbO
we+TDCHjLwtRlo4idfkcSER+anmXwIBRLKstqJaHoxXna6LtqaBod04IlyVD
Q75sbQq9Bu1fg3c/PtQPkj3MK9+fxlhh7OFRDR4Cy4VfzqsIkVeucFGPw8fm
5b4bQhfxYaxGjz18vwZH55a7L17BQcY6bc5TOz4E8s1x55qY+F4S+HlEvwnG
o1V1BdfeQ4X6snzrDSHuLyz3YMv2Q99L+MIksRvU4PPkBusmuNG/ll/0GcZo
wn3LWZRWBHbP8r5VNAiqjrdpiUk54l6J+hxIb0RmyO994d5VIGuS006Qi5HR
1PvGcQ0NSUq2Z5b29yPpQPCB1PdsqO7Row8fG0JrPqwLNdjwP9/wkjcghP49
q4LDhb0QhC36LlzdCUFn3GP1CSYodscO/ROpgcGchem+1sOgrri6aI9qDqQV
9rStqsjDqCjZaUNUJSiJ5bTNd4pAUvc+V3+2HNP1joVhJn3wPxJ39OyOfjD7
LEQyP7aD/tTSx/h2PRI+7goJSvqAypvvGhJXDSBzpH161elemDgb3K2SHkHo
K3nLBPUOOPiahA/9YsIict4V3uZiPD57J00nnw95N7Pfms+5IGlvmzP+shE2
akX2Cv+6UTg/0/P6byH0ugJVqNF8FBrrPF+3gIPqztUqQh8BzItupk/cJfRY
znVwfz0Ai5ay1bZJFUivVZChGwtgWmByl6M4BLONPH3HunZED/yVY3wTgrKc
hl3zeFBJe290YdUgjBlv1nqs7Udhv/Dej3AhbB+dKPEwHQS79SX55kkhzGx/
HTP70Qons5gZbkQqwuXqP3YOdSGpyaSfESCA0ZnUpVu/jYDdGeF9vqQfch5f
ZlT/doO7fu/uivuEXv6bviWo6UHO10Xrnp/mIDrvjtvnrTxMmZlYL/iPA8oT
p8xplXiQRePaJ+xewHdSlj2yfAQeOvNSaTsE8N1xuWCLSRN463aT8uYIofXY
8vlVPypGK6xX+fQ2wm/s33SYKB+m53KlrEFHu8pXz8l9QqRddxA1XNsN8u1N
4xZ5ZCQ0WrkE+/Nh9Om49AcpHsZt9R/o2bdBvzebX/+yD5OyW46Pl/eBLFLU
PHY3BWkJiz/tmluLUPGzH/re8pAd+t/LTacEYCZMF8cmMkDanXomm9YBxXjj
55Ep/TAPzA6eOCIAWbDT135vFtgcZpraCA+mFIUfM3EDmCrIMhD/Xo2oqSWJ
67iVMB6h+w0sToH7sakC7VPtMNXuyo28wYZpaei6L3s64dL6Q0qziYY9dVGT
jsS5jRs6FTY4RyPu6KiXPrHP+S56HpULBxEnqnzpvXYDnOd6fqh9M4SMZbNn
K48NQNWyZKvnyjaQTp/Vba25AC1mdOhqfyE07H4H1tvVga4TNJhj/h3kPFJy
jEkRpt4jwWe8DNyj8kFqgV1wmjzTNbSkDZSjenSF6EL4poYJ48QpMDlx5MGD
OcOglH4ZemHBQtq/9SlbsxhI2JlgnHXpM/Y4qS7Y924EPfLs0C5C15ZxNtOz
Pw3iuBQqxLePwLPYrttWWQCbfy+Uk5/2I+ebj/Qykw7EJT/TLXtUjSDWwEzk
9z5Ma8fDZ18LirrO+V3X4oMXu1rtYRsThlpDPNIpJvzJKnZ/P/TiaK6LrPM/
LuQWZG11fs3AfivN1O0xTMh97Mrbk1YO0sEV0q/s/cD44BLsYSeAROq2rFyl
Ehjr/MguV3oJ2yf6l+f6sKAaPcuXi25U2x1t3ibbjUyTuWqTBQN4ubP++o5M
DpzWrB9Uiq9E5u2Wiaq+TwiS9D646ckgElos/gZv6sL+KsMUp1PEPqUuFOhZ
C0GyyGl5ptgDowz3ukSbARgPtQTqirMwnfb6RMdOHjxv7Q57XVEJOWbalFRl
Fbxf+Rgeo/UhYahpInaCBi2f80lruwthuniV/gm3YfhOBO6NamOD+vJC2rHQ
ehQ9yNpA2TyIDNf4Qz4nmCAr3Vg/UPkEjCjun62zekCxv/poVioTafP//jt0
iA/KCaW9evuY8DhZ/m2ktR+ZRx6HsW8WQtrZaNiDngVPyxsbVOl56CuOT/lr
zEemhZ79/C+DGD3dqN5U2wln62uVV1bRwbUQW3SH0oKew+d0hj25ODrniJdV
1QhGny6/KnGtDPqLya51FBaUybI+xX+JPVnsm+tx7Toovf9mzbfphEbI3IBv
ujQw86l3Izdz0Blhc/b4fiYelx7TuFwlQJKdtNqCyAFIS3HdN5pVQ56dN+7u
LQBFZ7HsifuvUN64YcNrejvMpicCfpwvQ0J8al6XWgn8f9LFCol5kGiet/y+
UVB5+w9pTT9x/nTLIOeOKnjqZNs017Mw/0hel6QRBzk7kylzR+gIDRNR62a0
Ie9d4NaXVsMwTM52MV8zCL+2U8KRcgFGf36ifrvfCcPrE4aXYzjQ33e78l1d
H35z5/+7/EgIm2Qx1R8R9fB+MXHB5zkfp3u8rhekE/P79WVi9H4pEsiKemsb
yuBOr3254B7hD2pzt5nz7oEU9EExPbUMPrvNELaPi8vnImw8e/oR50P3Lwng
wSH2yrX7uSw4pyQtbg8WoPTnRSlK0QA8v5NV7tCLoDEcGSHyigKbv4utJWu6
8OhSdCmLzEVm6lTJ1C0iR9zkPrkWdoM0E7YpujgIGZFRz8X/tYGe8blgxqoP
LgmF63ymuMg3r291N60AxdJ4R/vAS6RRR1z2TAsxSja75bezBSnRo9Ol2i1E
vmjkn678DikHFz2Xu31Q0ZBg/3PiI8N2qKiirhXuyxKfLP7VC2Pydf2d1z4i
YfG56N6EHOi7JTluGOxAvvaBI4f8BAgpKZePSxxC5aUDRt1zCV1+vG/3SScG
zH+6S3jyCbjl8evhnT8jcFkQ+u/1zz4wr9Gq9qRxifmLmZRltIHp3fXGfiHh
03YtZjcT34IkOFERsPExqsMi5K8ZdyCBJLviyYZshH/csiRsSxsEbmtnF71k
QGr5jTqjlULw0r0ejGwcRKvOWL3GDTpsvledaD7JJ/wh4NSPsRbQC7xumKbW
Imcj6X2BeicoK9a01hypRXUAzFJOtkBCi5fnfn4AKQ9m/9shxkP0uo0X2PIj
0Cq+zJY2aIb+LaFVFF2Ax2FeTg56AzCLm3HO6O4FdYOkbK4ZA+Rvx55kRr/H
Y8PgG89quAg16fLnLCmFxJqmBSd2UmFaZbabepMLm46wyObDpdBK9r4nSu+D
jZZpQIbNd+w/tkkz7xUHmhJ2dezVI1A7Flns94EHZcnrT8eThchPqcscXl8H
99rTrQaNgxC7lXuGLj8E5tfrN4rqhpC23Hrl2RA2zBpVSR+d6yHY8Mn9JZd4
b36OieRFASIzBOOyEnyMxd5w7FRhg+wZrMSZeA/yQzsbgxX3YCZetcnfgZjb
gOk69R89ODd/XKw/cRDMg63pHy734P6t6DVzo0Zgz/IuCVBlomHxliiqDQfS
DLbBUtsK7ElfTglfPgQLnXCz8FlDGH10eHc6vx+bHdOnN4uz4fk0uFrvcyFI
Pz992qUSieqU7IHVG6gw8J7z/uqSfui85r6gevSi56rUFfRxQRloF2+pbwKF
QZ6d9qMcCbwVBxoP5hAcdqatkV2BhBT3C+IhX5EQo3+L97AY9oF5jpQZghca
hJHWc/uR39jBknjARc/qMe3Km4OYf3iJj694L8irZbqOr+WBbDxmVbQiFqOL
DIeySfXQjNpnKtY8hL6+3I7e5Ca8Tj3WfK55EHJq/cgqHUaKwt1TH7w6QXJk
VgmankL6zqU1ilF1MPxo/qe2nobXXeVFAa+GCF2q3PjxZAhLiqrT5Dc0Qy5J
bKVbXDfc+5RXSqZ1QOfOxva0Fb2Qe9rb8yWfDrND9/otrDtB/3nxzJu3fBSJ
HpPd9qsf/h167k/VWpGRUn/SIoIKjULvdx/WMWC60Wf9vOohyDUUfmwWZcB+
YvkGzxwqMmIubQ0UG0BRwZb1g0ROk+eSzkv5DSP+zKng0pV0RB/0O3PKZBg2
R9V5b5/VojIj1vOCSz/OJdybclZio7pDZtpBSgCzbXckvsT0ILIomLyomoVK
7ruKwyVM5MSsP/zfzAiWjWuo+d/kQ+v16XiF0Bzsj+Y9TA/nQfrJohHB4CfE
y/lt2nGvE0v+W1pR/GIIs+02Janbt+C+7LL/3jqMQHGJdvu6yyNg3FP7G+cy
AJnju5k7I4eQv76hw2pZK7yrIg9Z/6TCeFtBdJfCU8hdOHkuwaUZLgtbmqK7
WBD4jYs/KOtGrahz2ZM/QliujT9ZnsLGMEnqgvWbQTi/SZ2wJPJ5vqrJ/jT3
DmxkrFzTOkZ8j/pj6RyiP4xeOHby0bMcpKnTlp4X6wZdwmlETLkO1Ko49Yjd
2dA3r/Y8ubYB1OJx/2XBpXDazJEgqxC+yL1WvP3QAOT6t4p82toGl9D4otP3
iL4zO+pS1P4hkE83Ku66GgN3deX4sMBmkMeTabr+BeiZPf/KN+KcDb/O+8by
hmAvLv3prAqR++OquRHyfCRE2bZf9CW4paLBUkeUA+X+a0YBnh+RkrpwTdAk
A/HOa3VezW+FWrP2xrvb+6HpdI3udmoEfuE7WhKoLJAlvI3Veh7Cd+erps7f
JRi1Xj5US84DN4b5smpJNfKkzCdpd7lgaM5IZATRYf/eseAM4U/UXgXDvE2l
6DROq0jxYILkFJPouPI5SIYycdqLHBDFKhMJD8j+P2c8V7GrgL9BV7PLvA6o
QY4cSPiRzrfVicmJI/CWeN3b8IAOp3uaq60muiDQ2lEScbgDlh/V30iWEf6W
qWHX1V4Jz85vbIWsCqw/nb5j1VgrNBW6u97vEGL9vhXZMxsHMCqz9QZWdCKh
zNerypEK91+39DpaBSBJbxt3GyL8+I7Ozn+P+mF8ZmpKeTILkoxzjzabs8B1
+PFoNLAdWmOnyInnhxBXNhUjlUX4Xd7cPJFAJi7/SZ/XvmYEQbyG5KcFLbA1
0CosFwrgtG3m+opTbEyXzJBfKPBxXMamoYrPgpzo0XinbX0InenOvCPThQRl
06eubygYkHTwZ1EJH3NWXx17PxsU5ZA8Y+VMkCPddmbbvAfvSc2tgbR+GOaN
kEIcaZiR0hXIzOFCy3zhZe27NIy2RH3tiaEh/mDZQqUFvZjRXL24JZfglcu0
nGk1LvbzbdJHGTyE9t+3MVnEhcZKN2OvE0SfWBkiZgc2kVec7NiYdpDlE0i/
DPKhte/VEb5vEcZ/6L7984KBqKbbW6W9S5A05/1wOk0AbqCr+FQnMa+1A0Fv
4ol9r/MP09zPhnLOJmdjkUKkFQlV1SSaIB+0KXz7Xiakq7fYDsnWghx1N/yt
WTdm08z2U5jE/N92Ta0TJ7i31IbN2ZKOJRt2pbw93QSNvT1js7OIHuG41zm/
vxGmbVe7SRwOLje8Y0X8ZGF8V6BaSUUv4hpJj+3WcuF85artRGgnMjTek0/T
erBkPO2T0sp2qKw5pDnJ5CL+UXmF6XcqdJLCnpwybYPabfK1wD8sJGTKOt1b
wcN8wxO5O8vY8E2ciipO7ACZcuQk61wIQg9trjK3K4OBvoiFuAOh82LLzs/H
WrC/SLr+6W4hLI6IPtt7h4pWw1XWi49z0CfuvXxRMQNJSw88jSV8zOlIsoae
JQ02yzuLlqwYgoRql16yAw/6D6zPkmO6IXHYKpG+i4lKXBKZKBoByf7nuPDU
MCQGq4sqX5RA9XKhV3MvC2qKYQs/nmUhg64uo5dI8GbYU/PBojaMU8167jpx
YGPm+rdPkg967svCk+l0KO+W+CAcfYd4kwHZCyE9ODjHiLxmRxuiZkINGjdS
sX/n9zniP7iQT5Gf8GAMgiLJEcnaHQ/lCZcBuZgiUFO+ZC49ysJRsxcPBQQ/
6svNbpC5TEOziLSU9OM+eKyv8ao3Ifb0fO+lJDsGjN+VCTYy3mEmuOXXExUh
erZnXTn/jon5q26ILrLqxaSMTW7O7wFQ2g5FW60uBFn889ewP9+gx4nMwfAI
0k6tEgQvaoVzyJUGy7edENAqxLOYDORduHdnupzoiz0XHwWpUtC6Q8m0SpMN
76KQZxtudOJg5ccjrvPooEjfZMmdpUNj67G/jCQ+yO/9/s2bVwiLE6pp3Xp5
sJmSzV0+ycV34aZV8oECiI0EPCpUJ+blWu6lltmF9QYtEc8imVivXrvrUTbx
e6+n+N1e3ovSAZvJ9MWED75SsLT/GoH8uBzR85daoXFsculThSqMTvsaZLlR
IH3cg/Wkuw7hNLXwGKNuUH5+bqnd3or02gOSE/oE54yarqs/XoKpxtDsIcI/
prT+vlsUU4kB7/jgwV8CLFH/sXZWLQtB749Q7Cu6wHSw73t2phnVeWe1lY3b
MOm78PaWJSzo6NP4xzKGwbAWKpPYBMfMpAw/i2XgsWr8QIs9C/k2biac0QGU
O7yZvK3cDkPKVl1yGBMWPIvm8eZ6DBRvqVD4JIQx3bCuKiUD0gXvRBVvMyDX
rX00wJIL820FL+csG4Dpr6z73exeKFtdutjk2A3Fdm2tORc5WBKwXXvzSxoC
D+sccT1O6L9GSWYTOx8vg1T2xtoOQz7iz7H7H/iYydz4Zy/hK6Q4DU37zBKQ
SrI/FyqEQZBx/NePSSZsHppUnt1bhuZvB2uMSEwkuGz7JBmWC4PuhS6r3Djg
7k2xHXWoBvVAasTR6EZM3vOX+dbMRrbzkTUTV/gITXK0+KXdCorvZ+8X009h
OtpncVSuA6RUK2t9JQESFGQlrk6kgrxV6x5NIRL6F7wGROZxwW0eeJ7syoG9
IWXRtUkaSFtq1ozNfoU9CT/7p2+P4LTE909aX9koUjsseukJG+w79Uc0CD0/
erXJ7MW+QSh/PXpdJk2AL39taTdNR8C7tLCLySV6sWLjTalcPjS2zXHfnTMM
1YrKiVn7eRCtovznsJ0F/Xl2f+Yn9sFs5cQ5pZ4hlEamy6iSh2AgLrn2XDUf
B7fojLcbMOG0Yvn5msBOgm9pKY4rKhCv/81UMpjg7o3G0/wtvWgm938MectD
0Pzmf3pSPRieiTj73GgIJsu0BOT8QTAcb92WTyW4Tqmn0kmFi+wC2vdqfSYo
WpMvE1IeIf9QSZS1Sie0gpYnxNaVgvwho3PoUCXc3zYaZe1sxrjuQp1DxZ2g
ks5f32hPcKzH4X97RBohfyqeI90vgIxrwFU1guuUnR7uE69phdz93euNKWUY
D7009pragnMX3sQSA4Fq9hWf3kOdUC4wfGyqSIXyM+cDoSmZmH1ZX5g/1oFC
7nXWDJOOGcMPpMM/eASPJYqqr34M41s7Q2qrYrF+7UTc378j0KN/bN9xbwRJ
167wf+3tg7L3gdfJcSyETyeO3XAheHnB65uOLT2gPy/HyS+Ef17zGpSrSYLG
itTTjl9akVIpYl59vwdR124EzpduhrFaeotqTBO8L6bNs9rLAEM32XW7kxAp
1R6Oe+91Q79Rdy2d6FGbT4v1nyG4YLbw+Y3tDTy4LPJ0rnldid+qd6oLmH2I
986Ys/8XDdRXe9as7CyDlqKra15eJczcLA/t9yT6j2ieeKl1GBQzrA+kdTUh
VHh9cIMzHeS3q+pd+gJho3xXzleLyO+emxalDW2ovi/KZxnUYErss+fq5V2g
6wo+/PAQQFku4PYr60qQrv6JLFdjwtPRdWLzCBWRqRJHKvYMgZSx75HA8xuy
DQ1e7aT3gz765/q58hq0zhr7qRTLg7lZl9tfgucy/Z6ILG3LhF6ieftppX5I
LBoZjVvNAD2i5IOrEh1Ltj/XoJgPQbInPNhnhQD5pa2JEzIURJ2oQjylCKYi
SSfNCtpAFXm5vObPAM5lbHK6MdUHmazM1ZqbWYivVS7IrhoEWSbA5+ztfqgZ
X5egTPORueZgEv0YFyk5Pfse/6XDouuewcPLxZDa9viD5LVhHDVWOjnvOROa
K1R+HvHnIMRDzPZmmBC/77AzBKp9yOctv32kjgbllid7tWIokPK6kE2XIHrU
w+F9lYpDCJ37vPmrNRM9Ioyg1++Iz26fvPxo7eCy59Q8+NaB0VT/g0J+K6Z6
el1UuzoxLpmnVrujF/GzrC3udA/CLK/J781uNpzoEuIGrv0gmXmEz7Hah+nq
qlW/zFigCN884timw2me2/buBxRMvRG9o3Ke6HlG8jQ7xWyQN4acLyskevjd
GWFMWiU0vC4Ir3jwYUzuWOh2ogvGJd2Un7e+wkRSJk3hQR9yol7b/grqhJ6+
19X9oYOg301eKgk6xHZEDz+0E0BrreGDlOlhZJIWFFZadaLVOv/azaNCdK7a
9zFvhwDV5hupSjuaEXn647rxvSxMxn6u/X2G6HN09Zbi2W3w/VDnwHKsgkGg
7OYEEPwxc4UX/64SonEqMTN5bJis8fUukWbC+7miPsebg0zNBgXV0gY4RYY3
Tp3sgXLuOv1SpzK89trJtz7TB//NOaNhua3IseusfiY/QOz9hcuKh/sw01Qj
O5g3iLhdGfUbYgVIe2UlkV8zDM+IYXvaUxros+4pFE/QkBk/768jhejlT8X4
w6JDKJw1Z/rKcTpIRkV7f1x8AcFuDT95dMF9i+bdjkVDoCsz3EwJzimct+Xr
b1U+8rV9Pl/KaYLkr97ZSZxBjC8teV+bxIDUBoO91oNsuNlmuWW7C+HATFrm
GdQPG5NUEWvmMKpd3pXNfdGGhOuzc1dYJyNqconvpj85kCaRTHXNqyHtr5zN
fMLE1GXa9HcFDoKcv0nwyS1wl5MODgkQIs7iVMgz/WqY3DRQsnrIJfrLGmvX
YnMMbOIl8/l90Pn3bVRevwnKwV8bty5j45kfy/Bk/jDcLHW/urv1Ibwo/FZF
CR+tmw8EOk30Y0qHKlevKQQ5c1GPsKwAymrOPj4zfFSHVpJnCJ5kGFnFL5Qn
+MX1Le2PHRUUD69NtYReHqnv2DTPgE7kY+XMoy3dMDVccMkquxUyxVsCvd8T
vfj5fiule19gKVJiXnOXg/nnPO/q0KgwdK6zdCwgeCquinMzWghmZPYC0tOP
GN6sy7jdQ/hoeOCLHRZdcAjoXhw0MYz8hT3mva4snEsy/3RTWoA+W+2X5qLN
yM/tVp/rWwFRqbD11yyI+1FcuEt2og2GqcWibrFtyI+vkTSyIfz7K3ml5r9s
2OxojBt9NgKL79X8Pweb8GVhgGdUPJGnUd91//+/YbPD/oDdskIoanzb57yq
GRQ30fV+Q02weJZuE1FfjARrSdNlj4h7UNDhlGZ2wO/bolWstwJQbDxzM098
gueJyJlRAQskm6onXkofCE4NVpHQ5YAh83D7s+o2xImlh2YYdKE93bLjnaoA
7k9FF/UWt8D//eWDkiFNyBwIMrp7legH24bDpMv6cTpZEKi5kwejLP3YnUT/
y/Q11P6gW4bH81uUwBAiNJq7/JhuF8auUh2SvIWQf7zc7NeyfgS9HXNUu9wG
ge5OtqEB0V+q/2n3fXdD6xVG+b9ZXYhSL5fNTqyAyqX0ZjtnYi+yQ6Pf7WlA
lFSG6PPQCviqlnw5l9UB5XfxnyfU6nH6id31BRQWGFLyY+EyQ8gsO98T8IIP
Aw+jlXFzR/A/8ITNlg==
    "], CompressedData["
1:eJztxTENACEABLAjrwQleEDCJ8zYZkQCCy5ol9Z/9lGSrC/XbrZt27Zt27Zt
27Ztv/wBlrmiag==
    "]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Short]], "Output",ExpressionUUID->"63bde569-6eb8-42a9-ac28-1fceeb2fc871"]
}, Open  ]],

Cell["This inner product can be calculated much faster like this:", \
"Text",ExpressionUUID->"99c2b295-9f04-41cb-ba68-4b18b01b32da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dvecPacked", ".", "dvecPacked"}], "//", 
  "RepeatedTiming"}]], \
"Input",ExpressionUUID->"2cb33653-32cf-4056-a04a-07e1325b889f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.086456298828125`*^-6", ",", 
   InterpretationBox[
    RowBox[{"330.3676525794474`", "\[VeryThinSpace]", "+", 
     RowBox[{"993.2135343797041`", " ", "\[CurlyEpsilon]"}]}],
    DualNumbers`Dual[330.3676525794474, 993.2135343797041]]}], 
  "}"}]], "Output",ExpressionUUID->"72b01c99-b83a-4a9d-a472-a5c036faf266"]
}, Open  ]],

Cell["You can always unpack again:", \
"Text",ExpressionUUID->"64fda5da-f8ad-409f-b1f8-0bd71f87ff46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UnpackDualArray", "[", "dvecPacked", "]"}], "===", 
  "dvec"}]], "Input",ExpressionUUID->"5e7dd383-749b-47e6-8e1a-6ef176169560"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"1e9f7c63-f46f-408b-b7ce-0fd1cc8d72f9"]
}, Open  ]],

Cell["Test if a dual array is in packed or unpacked form:", \
"Text",ExpressionUUID->"8bf1c261-cd3c-42a4-9452-4c6370b69d81"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DualArrayQ", "[", "dvecPacked", "]"}], "\n", 
 RowBox[{"UnpackedDualArrayQ", "[", "dvec", 
  "]"}]}], "Input",ExpressionUUID->"b870f717-dc08-4d88-90f3-e3f6890df523"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"c0c6747c-36e6-43c0-bcc3-462eeee7e7a0"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"57e758ad-d44a-4991-9c54-cf9a6aed096d"]
}, Open  ]],

Cell[TextData[{
 "You can define packed dual arrays directly without ",
 Cell[BoxData[
  FormBox[
   StyleBox["PackDualArray",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "2058c1e0-06f1-492d-b866-459b32b08929"],
 ". The standard and nonstandard part should satisfy ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["ArrayQ", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/ArrayQ",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b4ae2f4d-e63e-4079-8ac6-e13b0da760e4"],
 " and have the same ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Dimensions", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Dimensions",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "430cff36-2ba4-43b1-b7a5-cb5522ca976d"],
 ":"
}], "Text",ExpressionUUID->"7ae4aac7-734a-4b67-bbf1-141c237f29e3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"myArray", "=", 
  RowBox[{"Dual", "[", 
   RowBox[{
    RowBox[{"Range", "[", "10", "]"}], ",", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"1", ",", "10"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DualArrayQ", "[", "myArray", 
  "]"}]}], "Input",ExpressionUUID->"b6ccc2eb-74ac-4fa7-acab-93da9a1517ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Dual",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{
       False -> GridBox[{{"\"{\[Ellipsis]} + \[CurlyEpsilon] {\[Ellipsis]}\"", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"\[Times]", "\"\[Times]\"", "10"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> 
        GridBox[{{"\"{\[Ellipsis]} + \[CurlyEpsilon] {\[Ellipsis]}\"", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"\[Times]", "\"\[Times]\"", "10"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DualNumbers`Dual[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {1, 1, 1, 1, 1, 1, 1, 1, 
   1, 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->
   False]], "Output",ExpressionUUID->"beb96579-2cb2-4a80-81b7-f9e5912259be"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"ffe992c9-7d60-4d2b-af95-7661c7218323"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbols", \
"Subsection",ExpressionUUID->"480ee803-0653-481c-ba8a-1ac428f21399"],

Cell[CellGroupData[{

Cell["Construction and accessing standard/nonstandard parts", \
"Subsubsection",ExpressionUUID->"6a59529d-398c-4b37-8c91-e92b7872fd6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "Dual"}], "\[IndentingNewLine]", 
 RowBox[{"?", "ToDual"}], "\[IndentingNewLine]", 
 RowBox[{"?", "Standard"}], "\[IndentingNewLine]", 
 RowBox[{"?", "NonStandard"}], "\[IndentingNewLine]", 
 RowBox[{"?", "StandardNonStandard"}], "\[IndentingNewLine]", 
 RowBox[{"?", 
  "StandardAll"}]}], \
"Input",ExpressionUUID->"3082b9ef-db93-4ab3-b0ce-e85ddbdee692"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/Dual",
              ButtonNote->"paclet:DualNumbers/ref/Dual"],
             "\"paclet:DualNumbers/ref/Dual\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] represents a dual number with \
standard part \\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and infinitesimal \
part \\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\).\\nDual[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)] represents an array of dual numbers. The arrays \
should have the same shape (i.e., \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)] === \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)])\\nDual[\\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\)] uses ToDual[a, 0] to construct a dual quantity.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/Dual", 
                    "paclet:DualNumbers/ref/Dual", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "ReadProtected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`Dual\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/Dual",
              ButtonNote->"paclet:DualNumbers/ref/Dual"],
             "\"paclet:DualNumbers/ref/Dual\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] represents a dual number with \
standard part \\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and infinitesimal \
part \\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\).\\nDual[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)] represents an array of dual numbers. The arrays \
should have the same shape (i.e., \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)] === \
Dimensions[\\!\\(\\*StyleBox[SubscriptBox[\\\"array\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\)])\\nDual[\\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\)] uses ToDual[a, 0] to construct a dual quantity.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Dual[\!\(\*StyleBox[\"a\", \"TI\"]\), \!\(\*StyleBox[\"b\", \"TI\"]\)] \
represents a dual number with standard part \!\(\*StyleBox[\"a\", \"TI\"]\) \
and infinitesimal part \!\(\*StyleBox[\"b\", \"TI\"]\).\n\
Dual[\!\(\*StyleBox[SubscriptBox[\"array\", StyleBox[\"1\", \"TR\"]], \"TI\"]\
\), \!\(\*StyleBox[SubscriptBox[\"array\", StyleBox[\"2\", \"TR\"]], \
\"TI\"]\)] represents an array of dual numbers. The arrays should have the \
same shape (i.e., Dimensions[\!\(\*StyleBox[SubscriptBox[\"array\", StyleBox[\
\"1\", \"TR\"]], \"TI\"]\)] === \
Dimensions[\!\(\*StyleBox[SubscriptBox[\"array\", StyleBox[\"2\", \"TR\"]], \
\"TI\"]\)])\nDual[\!\(\*StyleBox[\"a\", \"TI\"]\)] uses ToDual[a, 0] to \
construct a dual quantity.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/Dual"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {ReadProtected}, "FullName" -> "DualNumbers`Dual"|>, 
   False]]], "Output",ExpressionUUID->"fe8bdc1c-871b-443f-a266-798c5b697bc6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/ToDual",
              ButtonNote->"paclet:DualNumbers/ref/ToDual"],
             "\"paclet:DualNumbers/ref/ToDual\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ToDual[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"const\\\", \\\"TI\\\"]\\)] constructs a \
dual scalar or array with constant nonstandard part. The default value for \
\\!\\(\\*StyleBox[\\\"const\\\", \\\"TI\\\"]\\) is 0.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{"DualNumbers`Private`d_Dual", ",", "___"}], "]"}],
                     ":=", "DualNumbers`Private`d"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "DualNumbers`Private`a_SparseArray", "?", 
                    "DualFreeArrayQ"}], ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a", "+", 
                    RowBox[{
                    RowBox[{"SparseArray", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", "]"}],
                     ",", "DualNumbers`Private`const"}], "]"}], " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[DualNumbers`Private`a, 
                    SparseArray[{}, 
                    Dimensions[DualNumbers`Private`a], 
                    DualNumbers`Private`const]]]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "DualFreeArrayQ"}],
                     ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a", "+", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"DualNumbers`Private`const", ",", 
                    
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", 
                    "]"}]}], "]"}], " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[DualNumbers`Private`a, 
                    ConstantArray[DualNumbers`Private`const, 
                    Dimensions[DualNumbers`Private`a]]]]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "ArrayQ"}], "/;", 
                    RowBox[{"!", 
                    
                    RowBox[{"DualFreeArrayQ", "[", "DualNumbers`Private`a", 
                    "]"}]}]}], ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{"#1", ",", "DualNumbers`Private`const"}], "]"}], 
                    "&"}], ",", "DualNumbers`Private`a", ",", 
                    RowBox[{"{", 
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`a", "]"}],
                     "}"}]}], "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "DualFreeArrayQ"}],
                     ",", 
                    
                    RowBox[{
                    "DualNumbers`Private`b_", "?", "DualFreeArrayQ"}]}], 
                    "]"}], ":=", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a", "+", 
                    
                    RowBox[{
                    "DualNumbers`Private`b", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    DualNumbers`Private`a, DualNumbers`Private`b]]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}]}], ",", 
                    
                    RowBox[{
                    "DualNumbers`Private`arr_SparseArray", "?", 
                    "DualFreeArrayQ"}]}], "]"}], ":=", 
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"SparseArray", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`arr", 
                    "]"}], ",", "DualNumbers`Private`a"}], "]"}], "+", 
                    
                    RowBox[{
                    "DualNumbers`Private`arr", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    SparseArray[{}, 
                    Dimensions[DualNumbers`Private`arr], 
                    DualNumbers`Private`a], DualNumbers`Private`arr]]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}]}], ",", 
                    
                    RowBox[{
                    "DualNumbers`Private`arr_", "?", "DualFreeArrayQ"}]}], 
                    "]"}], ":=", 
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", 
                    
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`arr", 
                    "]"}]}], "]"}], "+", 
                    
                    RowBox[{
                    "DualNumbers`Private`arr", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    ConstantArray[DualNumbers`Private`a, 
                    Dimensions[DualNumbers`Private`arr]], 
                    DualNumbers`Private`arr]]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ToDual", "[", 
                    RowBox[{"DualNumbers`Private`a_", ",", 
                    RowBox[{"DualNumbers`Private`const", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_", "?", "ArrayQ"}], "]"}], ":", "0"}]}], "]"}], 
                    ":=", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a", "+", 
                    
                    RowBox[{
                    "DualNumbers`Private`const", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    DualNumbers`Private`a, DualNumbers`Private`const]]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "ToDual", "[", "DualNumbers`Private`args__", "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ToDual", "::", "cons"}], "MessageName"], ",", 
                    RowBox[{"Short", "/@", 
                    RowBox[{"{", "DualNumbers`Private`args", "}"}]}]}], "]"}],
                     ";", "False"}], ")"}]}], ":=", "Undefined"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/ToDual", 
                    "paclet:DualNumbers/ref/ToDual", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "ToDual", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`ToDual] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`ToDual\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/ToDual",
              ButtonNote->"paclet:DualNumbers/ref/ToDual"],
             "\"paclet:DualNumbers/ref/ToDual\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ToDual[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"const\\\", \\\"TI\\\"]\\)] constructs a \
dual scalar or array with constant nonstandard part. The default value for \
\\!\\(\\*StyleBox[\\\"const\\\", \\\"TI\\\"]\\) is 0.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ToDual[\!\(\*StyleBox[\"expr\", \"TI\"]\), \!\(\*StyleBox[\"const\", \
\"TI\"]\)] constructs a dual scalar or array with constant nonstandard part. \
The default value for \!\(\*StyleBox[\"const\", \"TI\"]\) is 0.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/ToDual"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`ToDual, {DualNumbers`ToDual[
         Pattern[DualNumbers`Private`d, 
          Blank[DualNumbers`Dual]], 
         BlankNullSequence[]] :> DualNumbers`Private`d, DualNumbers`ToDual[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[SparseArray]], DualNumbers`DualFreeArrayQ], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, 
         SparseArray[{}, 
          Dimensions[DualNumbers`Private`a], DualNumbers`Private`const]], 
       DualNumbers`ToDual[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], DualNumbers`DualFreeArrayQ], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, 
         ConstantArray[DualNumbers`Private`const, 
          Dimensions[DualNumbers`Private`a]]], DualNumbers`ToDual[
         Condition[
          PatternTest[
           Pattern[DualNumbers`Private`a, 
            Blank[]], ArrayQ], 
          Not[
           DualNumbers`DualFreeArrayQ[DualNumbers`Private`a]]], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> DualNumbers`PackDualArray[
         Map[
         DualNumbers`ToDual[#, DualNumbers`Private`const]& , 
          DualNumbers`Private`a, {
           ArrayDepth[DualNumbers`Private`a]}]], DualNumbers`ToDual[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], DualNumbers`DualFreeArrayQ], 
         PatternTest[
          Pattern[DualNumbers`Private`b, 
           Blank[]], DualNumbers`DualFreeArrayQ]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`b], 
       DualNumbers`ToDual[
         Pattern[DualNumbers`Private`a, 
          Except[
           PatternTest[
            Blank[], ArrayQ]]], 
         PatternTest[
          Pattern[DualNumbers`Private`arr, 
           Blank[SparseArray]], DualNumbers`DualFreeArrayQ]] :> 
       DualNumbers`Dual[
         SparseArray[{}, 
          Dimensions[DualNumbers`Private`arr], DualNumbers`Private`a], 
         DualNumbers`Private`arr], DualNumbers`ToDual[
         Pattern[DualNumbers`Private`a, 
          Except[
           PatternTest[
            Blank[], ArrayQ]]], 
         PatternTest[
          Pattern[DualNumbers`Private`arr, 
           Blank[]], DualNumbers`DualFreeArrayQ]] :> DualNumbers`Dual[
         ConstantArray[DualNumbers`Private`a, 
          Dimensions[DualNumbers`Private`arr]], DualNumbers`Private`arr], 
       DualNumbers`ToDual[
         Pattern[DualNumbers`Private`a, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`const, 
           Except[
            PatternTest[
             Blank[], ArrayQ]]], 0]] :> 
       DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`const], 
       Condition[
         DualNumbers`ToDual[
          Pattern[DualNumbers`Private`args, 
           BlankSequence[]]], Message[
           MessageName[DualNumbers`ToDual, "cons"], 
           Map[Short, {DualNumbers`Private`args}]]; False] :> Undefined}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`ToDual, {
      SyntaxInformation[DualNumbers`ToDual] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`ToDual"|>, 
   False]]], "Output",ExpressionUUID->"d0368bba-d5f4-490f-9646-fe24240deaaa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/Standard",
              ButtonNote->"paclet:DualNumbers/ref/Standard"],
             "\"paclet:DualNumbers/ref/Standard\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Standard[\\!\\(\\*StyleBox[\\\"d\\\", \
\\\"TI\\\"]\\)] extracts the standard part of a dual number \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) (i.e., the first \
argument).\\nSymbolic quantities are assumed to have zero nonstandard parts. \
Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Standard", "[", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    RowBox[{"_", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Blank[]]], "]"}], ":=", "DualNumbers`Private`a"}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"Standard", "[", "DualNumbers`Private`x_", "]"}], 
                    ":=", "DualNumbers`Private`x"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/Standard", 
                    "paclet:DualNumbers/ref/Standard", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Standard", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`Standard] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Listable", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`Standard\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/Standard",
              ButtonNote->"paclet:DualNumbers/ref/Standard"],
             "\"paclet:DualNumbers/ref/Standard\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Standard[\\!\\(\\*StyleBox[\\\"d\\\", \
\\\"TI\\\"]\\)] extracts the standard part of a dual number \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) (i.e., the first \
argument).\\nSymbolic quantities are assumed to have zero nonstandard parts. \
Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Standard[\!\(\*StyleBox[\"d\", \"TI\"]\)] extracts the standard part of \
a dual number \!\(\*StyleBox[\"d\", \"TI\"]\) (i.e., the first argument).\n\
Symbolic quantities are assumed to have zero nonstandard parts. Threads over \
lists.", "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/Standard"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`Standard, {DualNumbers`Standard[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Blank[]]] :> DualNumbers`Private`a, DualNumbers`Standard[
         Pattern[DualNumbers`Private`x, 
          Blank[]]] :> DualNumbers`Private`x}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`Standard, {
      SyntaxInformation[DualNumbers`Standard] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Listable}, "FullName" -> "DualNumbers`Standard"|>, 
   False]]], "Output",ExpressionUUID->"8b243571-9608-445d-b940-8eaec663b9e3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/NonStandard",
              ButtonNote->"paclet:DualNumbers/ref/NonStandard"],
             "\"paclet:DualNumbers/ref/NonStandard\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"NonStandard[\\!\\(\\*StyleBox[\\\"d\\\", \
\\\"TI\\\"]\\)] extracts the nonstandard part of a dual number \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) (i.e., the second \
argument).\\nSymbolic quantities are assumed to have zero nonstandard parts. \
Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"NonStandard", "[", 
                    InterpretationBox[
                    RowBox[{"_", "+", 
                    
                    RowBox[{
                    "DualNumbers`Private`b_", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Blank[], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], "]"}], ":=", "DualNumbers`Private`b"}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"NonStandard", "[", "_", "]"}], ":=", "0"}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/NonStandard", 
                    "paclet:DualNumbers/ref/NonStandard", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "NonStandard", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`NonStandard] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Listable", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`NonStandard\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/NonStandard",
              ButtonNote->"paclet:DualNumbers/ref/NonStandard"],
             "\"paclet:DualNumbers/ref/NonStandard\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"NonStandard[\\!\\(\\*StyleBox[\\\"d\\\", \
\\\"TI\\\"]\\)] extracts the nonstandard part of a dual number \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) (i.e., the second \
argument).\\nSymbolic quantities are assumed to have zero nonstandard parts. \
Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "NonStandard[\!\(\*StyleBox[\"d\", \"TI\"]\)] extracts the nonstandard \
part of a dual number \!\(\*StyleBox[\"d\", \"TI\"]\) (i.e., the second \
argument).\nSymbolic quantities are assumed to have zero nonstandard parts. \
Threads over lists.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/NonStandard"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`NonStandard, {DualNumbers`NonStandard[
         DualNumbers`Dual[
          Blank[], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Private`b, DualNumbers`NonStandard[
         Blank[]] :> 0}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`NonStandard, {
      SyntaxInformation[DualNumbers`NonStandard] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Listable}, "FullName" -> 
    "DualNumbers`NonStandard"|>, 
   False]]], "Output",ExpressionUUID->"0fe0e649-4bc3-4fb6-a6a7-14b342514d68"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/StandardNonStandard",
              ButtonNote->"paclet:DualNumbers/ref/StandardNonStandard"],
             "\"paclet:DualNumbers/ref/StandardNonStandard\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"StandardNonStandard[\\!\\(\\*StyleBox[\\\"d\\\", \\\
\"TI\\\"]\\)] extracts the standard and nonstandard parts of a dual number \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) and returns them as a \
list.\\nStandardNonStandard[\\!\\(\\*StyleBox[\\\"dualArray\\\", \
\\\"TI\\\"]\\)] returns the same as \
StandardNonStandard[UnpackDualArray[\\!\\(\\*StyleBox[\\\"dualArray\\\", \
\\\"TI\\\"]\\)]].\\nSymbolic quantities are assumed to have zero nonstandard \
parts. Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"StandardNonStandard", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], ")"}], "?", "DualArrayQ"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`depth", "=", 
                    
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`a", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"ToPackedArray", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`b"}], "}"}], "]"}], ",", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "DualNumbers`Private`depth", "]"}], 
                    ",", 
                    RowBox[{"DualNumbers`Private`depth", "+", "1"}]}], 
                    "]"}]}], "]"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"StandardNonStandard", "[", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{
                    "DualNumbers`Private`b_", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], "]"}], ":=", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "DualNumbers`Private`a", ",", "DualNumbers`Private`b"}], 
                    "}"}]}]}, {" "}, {
                    RowBox[{
                    
                    RowBox[{
                    "StandardNonStandard", "[", "DualNumbers`Private`x_", 
                    "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`x", ",", "0"}], "}"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/StandardNonStandard", 
                    "paclet:DualNumbers/ref/StandardNonStandard", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Listable", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`StandardNonStandard\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/StandardNonStandard",
              ButtonNote->"paclet:DualNumbers/ref/StandardNonStandard"],
             "\"paclet:DualNumbers/ref/StandardNonStandard\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"StandardNonStandard[\\!\\(\\*StyleBox[\\\"d\\\", \\\
\"TI\\\"]\\)] extracts the standard and nonstandard parts of a dual number \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) and returns them as a \
list.\\nStandardNonStandard[\\!\\(\\*StyleBox[\\\"dualArray\\\", \
\\\"TI\\\"]\\)] returns the same as \
StandardNonStandard[UnpackDualArray[\\!\\(\\*StyleBox[\\\"dualArray\\\", \
\\\"TI\\\"]\\)]].\\nSymbolic quantities are assumed to have zero nonstandard \
parts. Threads over lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "StandardNonStandard[\!\(\*StyleBox[\"d\", \"TI\"]\)] extracts the \
standard and nonstandard parts of a dual number \!\(\*StyleBox[\"d\", \"TI\"]\
\) and returns them as a list.\n\
StandardNonStandard[\!\(\*StyleBox[\"dualArray\", \"TI\"]\)] returns the same \
as StandardNonStandard[UnpackDualArray[\!\(\*StyleBox[\"dualArray\", \
\"TI\"]\)]].\nSymbolic quantities are assumed to have zero nonstandard parts. \
Threads over lists.", 
    "Documentation" -> <|
     "Local" -> "paclet:DualNumbers/ref/StandardNonStandard"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`StandardNonStandard, {
      DualNumbers`StandardNonStandard[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ]] :> 
       With[{DualNumbers`Private`depth = ArrayDepth[DualNumbers`Private`a]}, 
         Transpose[
          
          Developer`ToPackedArray[{
           DualNumbers`Private`a, DualNumbers`Private`b}], 
          Prepend[
           Range[DualNumbers`Private`depth], DualNumbers`Private`depth + 1]]],
        DualNumbers`StandardNonStandard[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> {DualNumbers`Private`a, DualNumbers`Private`b}, 
       DualNumbers`StandardNonStandard[
         Pattern[DualNumbers`Private`x, 
          Blank[]]] :> {DualNumbers`Private`x, 0}}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Listable}, "FullName" -> 
    "DualNumbers`StandardNonStandard"|>, 
   False]]], "Output",ExpressionUUID->"4956839f-c974-46d1-b102-84e0d35e75db"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/StandardAll",
              ButtonNote->"paclet:DualNumbers/ref/StandardAll"],
             "\"paclet:DualNumbers/ref/StandardAll\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"StandardAll[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] replaces all dual numbers in \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) with their standard parts.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "StandardAll", "[", "DualNumbers`Private`expr_", "]"}], 
                    ":=", 
                    
                    RowBox[{
                    "DualNumbers`Private`expr", "//.", "\[VeryThinSpace]", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    RowBox[{"_", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Blank[]]], "\[RuleDelayed]", 
                    "DualNumbers`Private`a"}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/StandardAll", 
                    "paclet:DualNumbers/ref/StandardAll", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "StandardAll", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`StandardAll] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`StandardAll\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/StandardAll",
              ButtonNote->"paclet:DualNumbers/ref/StandardAll"],
             "\"paclet:DualNumbers/ref/StandardAll\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"StandardAll[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] replaces all dual numbers in \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) with their standard parts.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "StandardAll[\!\(\*StyleBox[\"expr\", \"TI\"]\)] replaces all dual \
numbers in \!\(\*StyleBox[\"expr\", \"TI\"]\) with their standard parts.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/StandardAll"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`StandardAll, {DualNumbers`StandardAll[
         Pattern[DualNumbers`Private`expr, 
          Blank[]]] :> 
       ReplaceRepeated[DualNumbers`Private`expr, DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Blank[]] :> DualNumbers`Private`a]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`StandardAll, {
      SyntaxInformation[DualNumbers`StandardAll] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`StandardAll"|>, 
   False]]], "Output",ExpressionUUID->"a070b47b-550b-4bbe-8feb-458372d6519d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dual arrays", \
"Subsubsection",ExpressionUUID->"45f2c2cf-8457-4f1e-aa43-f5e4fcfbe25a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "PackDualArray"}], "\[IndentingNewLine]", 
 RowBox[{"?", "UnpackDualArray"}], "\[IndentingNewLine]", 
 RowBox[{"?", 
  "DualLinearSolveFunction"}]}], \
"Input",ExpressionUUID->"e0254399-fb4a-4ce7-aa39-18c29b5b34fa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/PackDualArray",
              ButtonNote->"paclet:DualNumbers/ref/PackDualArray"],
             "\"paclet:DualNumbers/ref/PackDualArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"PackDualArray[\\!\\(\\*StyleBox[\\\"array\\\", \
\\\"TI\\\"]\\)] converts an array of numbers (possibly duals) to the form \
Dual[\\!\\(\\*StyleBox[\\\"std\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"nonstd\\\", \\\"TI\\\"]\\)].\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{
                    "DualNumbers`Private`b_", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], "]"}], ":=", 
                    InterpretationBox[
                    RowBox[{
                    
                    RowBox[{
                    "ToPackedArray", "[", "DualNumbers`Private`a", "]"}], "+", 
                    RowBox[{
                    
                    RowBox[{
                    "ToPackedArray", "[", "DualNumbers`Private`b", "]"}], " ",
                     "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Developer`ToPackedArray[DualNumbers`Private`a], 
                    Developer`ToPackedArray[DualNumbers`Private`b]]]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    
                    RowBox[{
                    "DualNumbers`Private`array_", "?", "UnpackedDualArrayQ"}],
                     "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`depth", "=", 
                    
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`array", 
                    "]"}]}], "}"}], ",", 
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"ToPackedArray", "[", 
                    
                    RowBox[{"DualNumbers`Private`array", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", "DualNumbers`Private`depth"}], 
                    "]"}]}], ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
                    "+", 
                    RowBox[{
                    RowBox[{"ToPackedArray", "[", 
                    
                    RowBox[{"DualNumbers`Private`array", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", "DualNumbers`Private`depth"}], 
                    "]"}]}], ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
                    " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Developer`ToPackedArray[
                    Part[DualNumbers`Private`array, 
                    Apply[Sequence, 
                    ConstantArray[All, DualNumbers`Private`depth]], 1]], 
                    Developer`ToPackedArray[
                    Part[DualNumbers`Private`array, 
                    Apply[Sequence, 
                    ConstantArray[All, DualNumbers`Private`depth]], 2]]]]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"DualNumbers`Private`array_", "?", "ArrayQ"}], 
                    "]"}], ":=", 
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"ToPackedArray", "[", 
                    
                    RowBox[{
                    "Standard", "[", "DualNumbers`Private`array", "]"}], 
                    "]"}], "+", 
                    RowBox[{
                    RowBox[{"ToPackedArray", "[", 
                    
                    RowBox[{"NonStandard", "[", "DualNumbers`Private`array", 
                    "]"}], "]"}], " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Developer`ToPackedArray[
                    DualNumbers`Standard[DualNumbers`Private`array]], 
                    Developer`ToPackedArray[
                    DualNumbers`NonStandard[
                    DualNumbers`Private`array]]]]}]}, {" "}, {
                    RowBox[{
                    
                    RowBox[{
                    "PackDualArray", "[", "DualNumbers`Private`other_", "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"PackDualArray", "::", "arrayQ"}], "MessageName"],
                     ",", 
                    
                    RowBox[{"Short", "[", "DualNumbers`Private`other", 
                    "]"}]}], "]"}], ";", "DualNumbers`Private`other"}], 
                    ")"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/PackDualArray", 
                    "paclet:DualNumbers/ref/PackDualArray", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "PackDualArray", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`PackDualArray] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`PackDualArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/PackDualArray",
              ButtonNote->"paclet:DualNumbers/ref/PackDualArray"],
             "\"paclet:DualNumbers/ref/PackDualArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"PackDualArray[\\!\\(\\*StyleBox[\\\"array\\\", \
\\\"TI\\\"]\\)] converts an array of numbers (possibly duals) to the form \
Dual[\\!\\(\\*StyleBox[\\\"std\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"nonstd\\\", \\\"TI\\\"]\\)].\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "PackDualArray[\!\(\*StyleBox[\"array\", \"TI\"]\)] converts an array of \
numbers (possibly duals) to the form Dual[\!\(\*StyleBox[\"std\", \"TI\"]\), \
\!\(\*StyleBox[\"nonstd\", \"TI\"]\)].", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/PackDualArray"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`PackDualArray, {DualNumbers`PackDualArray[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         Developer`ToPackedArray[DualNumbers`Private`a], 
         Developer`ToPackedArray[DualNumbers`Private`b]], 
       DualNumbers`PackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`array, 
           Blank[]], DualNumbers`UnpackedDualArrayQ]] :> 
       With[{DualNumbers`Private`depth = 
          ArrayDepth[DualNumbers`Private`array]}, 
         DualNumbers`Dual[
          Developer`ToPackedArray[
           Part[DualNumbers`Private`array, 
            Apply[Sequence, 
             ConstantArray[All, DualNumbers`Private`depth]], 1]], 
          Developer`ToPackedArray[
           Part[DualNumbers`Private`array, 
            Apply[Sequence, 
             ConstantArray[All, DualNumbers`Private`depth]], 2]]]], 
       DualNumbers`PackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`array, 
           Blank[]], ArrayQ]] :> DualNumbers`Dual[
         Developer`ToPackedArray[
          DualNumbers`Standard[DualNumbers`Private`array]], 
         Developer`ToPackedArray[
          DualNumbers`NonStandard[DualNumbers`Private`array]]], 
       DualNumbers`PackDualArray[
         Pattern[DualNumbers`Private`other, 
          Blank[]]] :> (Message[
          MessageName[DualNumbers`PackDualArray, "arrayQ"], 
          Short[DualNumbers`Private`other]]; DualNumbers`Private`other)}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`PackDualArray, {
      SyntaxInformation[DualNumbers`PackDualArray] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`PackDualArray"|>, 
   False]]], "Output",ExpressionUUID->"5c3ac1f4-eb6f-40d1-8b12-ec7bcb8b6d39"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/UnpackDualArray",
              ButtonNote->"paclet:DualNumbers/ref/UnpackDualArray"],
             "\"paclet:DualNumbers/ref/UnpackDualArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UnpackDualArray[\\!\\(\\*StyleBox[\\\"dualArray\\\",\
 \\\"TI\\\"]\\)] reverses to operation of PackDualArray and creates an array \
of dual scalars.\\nProduces a message if packing messages have been turned on \
with On[\\\"Packing\\\"].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], ")"}], "?", "DualArrayQ"}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"DualNumbers`Private`packingMessagesEnabledQ", 
                    "[", "]"}], ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "punpack1"}], 
                    "MessageName"]}], "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`b"}], "}"}], ",", 
                    
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`a", 
                    "]"}]}], "]"}]}], ")"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    
                    RowBox[{
                    "DualNumbers`Private`d_Dual", "?", "DualScalarQ"}], "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "notArray"}], 
                    "MessageName"], ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`d", "]"}]}], 
                    "]"}], ";", "DualNumbers`Private`d"}], ")"}]}]}, {" "}, {
                    RowBox[{
                    
                    RowBox[{
                    "UnpackDualArray", "[", "DualNumbers`Private`other_", 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "badarray"}], 
                    "MessageName"], ",", 
                    
                    RowBox[{"Short", "[", "DualNumbers`Private`other", 
                    "]"}]}], "]"}], ";", "DualNumbers`Private`other"}], 
                    ")"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/UnpackDualArray", 
                    "paclet:DualNumbers/ref/UnpackDualArray", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "UnpackDualArray", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`UnpackDualArray] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`UnpackDualArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/UnpackDualArray",
              ButtonNote->"paclet:DualNumbers/ref/UnpackDualArray"],
             "\"paclet:DualNumbers/ref/UnpackDualArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UnpackDualArray[\\!\\(\\*StyleBox[\\\"dualArray\\\",\
 \\\"TI\\\"]\\)] reverses to operation of PackDualArray and creates an array \
of dual scalars.\\nProduces a message if packing messages have been turned on \
with On[\\\"Packing\\\"].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "UnpackDualArray[\!\(\*StyleBox[\"dualArray\", \"TI\"]\)] reverses to \
operation of PackDualArray and creates an array of dual scalars.\nProduces a \
message if packing messages have been turned on with On[\"Packing\"].", 
    "Documentation" -> <|
     "Local" -> "paclet:DualNumbers/ref/UnpackDualArray"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`UnpackDualArray, {DualNumbers`UnpackDualArray[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ]] :> (If[
          DualNumbers`Private`packingMessagesEnabledQ[], 
          Quiet[
           Message[
            MessageName[DualNumbers`UnpackDualArray, "unpack"], 
            Dimensions[DualNumbers`Private`a]], {
            MessageName[Developer`FromPackedArray, "unpack"], 
            MessageName[Developer`FromPackedArray, "punpack1"]}]]; 
        MapThread[
         DualNumbers`Dual, {DualNumbers`Private`a, DualNumbers`Private`b}, 
          ArrayDepth[DualNumbers`Private`a]]), DualNumbers`UnpackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`d, 
           Blank[DualNumbers`Dual]], DualNumbers`DualScalarQ]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "notArray"], 
          Short[DualNumbers`Private`d]]; DualNumbers`Private`d), 
       DualNumbers`UnpackDualArray[
         Pattern[DualNumbers`Private`other, 
          Blank[]]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "badarray"], 
          Short[DualNumbers`Private`other]]; DualNumbers`Private`other)}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`UnpackDualArray, {
      SyntaxInformation[DualNumbers`UnpackDualArray] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`UnpackDualArray"|>, 
   False]]], "Output",ExpressionUUID->"88bfc8e2-c83c-4c34-9688-55012783c4b6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualLinearSolveFunction",
              ButtonNote->"paclet:DualNumbers/ref/DualLinearSolveFunction"],
             "\"paclet:DualNumbers/ref/DualLinearSolveFunction\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualLinearSolveFunction[\\!\\(\\*StyleBox[\\\"ls\\\"\
, \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] is produced \
from LinearSolve[Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]]. A DualLinearSolveFunction can \
be applied to Dual arrays.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" SubValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"SubValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "SubValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualLinearSolveFunction", "[", 
                    RowBox[{"DualNumbers`Private`ls_LinearSolveFunction", ",", 
                    
                    RowBox[{"DualNumbers`Private`b_", "?", 
                    "SquareMatrixQ"}]}], "]"}], "[", 
                    RowBox[{"DualNumbers`Private`m_", "?", "ArrayQ"}], "]"}], 
                    ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`inv", "=", 
                    
                    RowBox[{"DualNumbers`Private`ls", "[", 
                    "DualNumbers`Private`m", "]"}]}], "}"}], ",", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`inv", "-", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`ls", "[", 
                    
                    RowBox[{"DualNumbers`Private`b", ".", 
                    "DualNumbers`Private`inv"}], "]"}], " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    DualNumbers`Private`inv, -DualNumbers`Private`ls[
                    Dot[DualNumbers`Private`b, DualNumbers`Private`inv]]]], 
                    "/;", 
                    
                    RowBox[{"ArrayQ", "[", "DualNumbers`Private`inv", 
                    "]"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualLinearSolveFunction", "[", 
                    RowBox[{"DualNumbers`Private`ls_LinearSolveFunction", ",", 
                    
                    RowBox[{"DualNumbers`Private`b_", "?", 
                    "SquareMatrixQ"}]}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"(", 
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a2_", "?", "ArrayQ"}], "+", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`b2_", "?", "ArrayQ"}], " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    PatternTest[
                    Pattern[DualNumbers`Private`a2, 
                    Blank[]], ArrayQ], 
                    PatternTest[
                    Pattern[DualNumbers`Private`b2, 
                    Blank[]], ArrayQ]]], ")"}], "?", "DualArrayQ"}], "]"}], 
                    ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`inv", "=", 
                    
                    RowBox[{"DualNumbers`Private`ls", "[", 
                    "DualNumbers`Private`a2", "]"}]}], "}"}], ",", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`inv", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"DualNumbers`Private`ls", "[", 
                    
                    RowBox[{"DualNumbers`Private`b", ".", 
                    "DualNumbers`Private`inv"}], "]"}]}], "+", 
                    
                    RowBox[{"DualNumbers`Private`ls", "[", 
                    "DualNumbers`Private`b2", "]"}]}], ")"}], " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    DualNumbers`Private`inv, -DualNumbers`Private`ls[
                    Dot[DualNumbers`Private`b, DualNumbers`Private`inv]] + 
                    DualNumbers`Private`ls[DualNumbers`Private`b2]]], "/;", 
                    
                    RowBox[{"ArrayQ", "[", "DualNumbers`Private`inv", 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualLinearSolveFunction", 
                    "paclet:DualNumbers/ref/DualLinearSolveFunction", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "DualLinearSolveFunction", 
                    "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualLinearSolveFunction] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualLinearSolveFunction\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualLinearSolveFunction",
              ButtonNote->"paclet:DualNumbers/ref/DualLinearSolveFunction"],
             "\"paclet:DualNumbers/ref/DualLinearSolveFunction\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualLinearSolveFunction[\\!\\(\\*StyleBox[\\\"ls\\\"\
, \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] is produced \
from LinearSolve[Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]]. A DualLinearSolveFunction can \
be applied to Dual arrays.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualLinearSolveFunction[\!\(\*StyleBox[\"ls\", \"TI\"]\), \
\!\(\*StyleBox[\"b\", \"TI\"]\)] is produced from \
LinearSolve[Dual[\!\(\*StyleBox[\"a\", \"TI\"]\), \!\(\*StyleBox[\"b\", \
\"TI\"]\)]]. A DualLinearSolveFunction can be applied to Dual arrays.", 
    "Documentation" -> <|
     "Local" -> "paclet:DualNumbers/ref/DualLinearSolveFunction"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> 
    Information`InformationValueForm[
     SubValues, DualNumbers`DualLinearSolveFunction, {
      DualNumbers`DualLinearSolveFunction[
         Pattern[DualNumbers`Private`ls, 
          Blank[LinearSolveFunction]], 
         PatternTest[
          Pattern[DualNumbers`Private`b, 
           Blank[]], SquareMatrixQ]][
         PatternTest[
          Pattern[DualNumbers`Private`m, 
           Blank[]], ArrayQ]] :> 
       With[{DualNumbers`Private`inv = 
          DualNumbers`Private`ls[DualNumbers`Private`m]}, 
         Condition[
          DualNumbers`Dual[DualNumbers`Private`inv, -DualNumbers`Private`ls[
             Dot[DualNumbers`Private`b, DualNumbers`Private`inv]]], 
          ArrayQ[DualNumbers`Private`inv]]], 
       DualNumbers`DualLinearSolveFunction[
         Pattern[DualNumbers`Private`ls, 
          Blank[LinearSolveFunction]], 
         PatternTest[
          Pattern[DualNumbers`Private`b, 
           Blank[]], SquareMatrixQ]][
         PatternTest[
          DualNumbers`Dual[
           PatternTest[
            Pattern[DualNumbers`Private`a2, 
             Blank[]], ArrayQ], 
           PatternTest[
            Pattern[DualNumbers`Private`b2, 
             Blank[]], ArrayQ]], DualNumbers`DualArrayQ]] :> 
       With[{DualNumbers`Private`inv = 
          DualNumbers`Private`ls[DualNumbers`Private`a2]}, 
         Condition[
          DualNumbers`Dual[DualNumbers`Private`inv, -DualNumbers`Private`ls[
              Dot[DualNumbers`Private`b, DualNumbers`Private`inv]] + 
           DualNumbers`Private`ls[DualNumbers`Private`b2]], 
          ArrayQ[DualNumbers`Private`inv]]]}], "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualLinearSolveFunction, {
      SyntaxInformation[DualNumbers`DualLinearSolveFunction] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualLinearSolveFunction"|>, 
   False]]], "Output",ExpressionUUID->"c8a69732-207f-4fec-850b-9705682425a4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing for data type", \
"Subsubsection",ExpressionUUID->"7bb15119-6233-4e43-b9de-de64427c2cf1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "DualQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "StandardQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualScalarQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualArrayQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "UnpackDualArray"}], "\[IndentingNewLine]", 
 RowBox[{"?", 
  "DualFreeArrayQ"}]}], \
"Input",ExpressionUUID->"7b7ceb43-1b98-499d-94b8-8cd08dc5d15a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualQ",
              ButtonNote->"paclet:DualNumbers/ref/DualQ"],
             "\"paclet:DualNumbers/ref/DualQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualQ[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a \
dual number.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "DualQ", "[", "DualNumbers`Private`expr_Dual", "]"}], 
                    ":=", 
                    RowBox[{
                    
                    RowBox[{
                    "DualScalarQ", "[", "DualNumbers`Private`expr", "]"}], 
                    "||", 
                    
                    RowBox[{
                    "DualArrayQ", "[", "DualNumbers`Private`expr", 
                    "]"}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualQ", "[", "_", "]"}], ":=", "False"}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualQ", 
                    "paclet:DualNumbers/ref/DualQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualQ", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualQ",
              ButtonNote->"paclet:DualNumbers/ref/DualQ"],
             "\"paclet:DualNumbers/ref/DualQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualQ[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a \
dual number.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualQ[\!\(\*StyleBox[\"expr\", \"TI\"]\)] tests if \!\(\*StyleBox[\"expr\
\", \"TI\"]\) is a dual number.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/DualQ"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualQ, {DualNumbers`DualQ[
         Pattern[DualNumbers`Private`expr, 
          Blank[DualNumbers`Dual]]] :> Or[
         DualNumbers`DualScalarQ[DualNumbers`Private`expr], 
         DualNumbers`DualArrayQ[DualNumbers`Private`expr]], DualNumbers`DualQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualQ, {
      SyntaxInformation[DualNumbers`DualQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualQ"|>, 
   False]]], "Output",ExpressionUUID->"28fa6d95-a9c0-43fc-a329-9c80f80643ac"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/StandardQ",
              ButtonNote->"paclet:DualNumbers/ref/StandardQ"],
             "\"paclet:DualNumbers/ref/StandardQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"StandardQ[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has a \
head different from Dual.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"StandardQ", "[", "_Dual", "]"}], ":=", 
                    "False"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"StandardQ", "[", "_", "]"}], ":=", "True"}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/StandardQ", 
                    "paclet:DualNumbers/ref/StandardQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "StandardQ", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`StandardQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`StandardQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/StandardQ",
              ButtonNote->"paclet:DualNumbers/ref/StandardQ"],
             "\"paclet:DualNumbers/ref/StandardQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"StandardQ[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has a \
head different from Dual.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "StandardQ[\!\(\*StyleBox[\"expr\", \"TI\"]\)] tests if \
\!\(\*StyleBox[\"expr\", \"TI\"]\) has a head different from Dual.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/StandardQ"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`StandardQ, {DualNumbers`StandardQ[
         Blank[DualNumbers`Dual]] :> False, DualNumbers`StandardQ[
         Blank[]] :> True}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`StandardQ, {
      SyntaxInformation[DualNumbers`StandardQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`StandardQ"|>, 
   False]]], "Output",ExpressionUUID->"852e8118-386f-4255-810c-b66cc8a34ee8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualScalarQ",
              ButtonNote->"paclet:DualNumbers/ref/DualScalarQ"],
             "\"paclet:DualNumbers/ref/DualScalarQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualQ[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a \
dual number but not a dual array.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DualScalarQ", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_List", "|", "_SparseArray"}], ")"}], "+", 
                    RowBox[{"_", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Alternatives[
                    Blank[List], 
                    Blank[SparseArray]], 
                    Blank[]]], "|", 
                    InterpretationBox[
                    RowBox[{"_", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_List", "|", "_SparseArray"}], ")"}], " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Blank[], 
                    Alternatives[
                    Blank[List], 
                    Blank[SparseArray]]]]}], "]"}], ":=", "False"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualScalarQ", "[", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{
                    "DualNumbers`Private`b_", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], "]"}], ":=", 
                    RowBox[{"NoneTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`b"}], "}"}], ",", "ArrayQ"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualScalarQ", "[", "_", "]"}], ":=", 
                    "False"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualScalarQ", 
                    "paclet:DualNumbers/ref/DualScalarQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualScalarQ", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualScalarQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualScalarQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualScalarQ",
              ButtonNote->"paclet:DualNumbers/ref/DualScalarQ"],
             "\"paclet:DualNumbers/ref/DualScalarQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualQ[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a \
dual number but not a dual array.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualQ[\!\(\*StyleBox[\"expr\", \"TI\"]\)] tests if \!\(\*StyleBox[\"expr\
\", \"TI\"]\) is a dual number but not a dual array.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/DualScalarQ"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualScalarQ, {DualNumbers`DualScalarQ[
         Alternatives[
          DualNumbers`Dual[
           Alternatives[
            Blank[List], 
            Blank[SparseArray]], 
           Blank[]], 
          DualNumbers`Dual[
           Blank[], 
           Alternatives[
            Blank[List], 
            Blank[SparseArray]]]]] :> False, DualNumbers`DualScalarQ[
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> 
       NoneTrue[{DualNumbers`Private`a, DualNumbers`Private`b}, ArrayQ], 
       DualNumbers`DualScalarQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualScalarQ, {
      SyntaxInformation[DualNumbers`DualScalarQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualScalarQ"|>, 
   False]]], "Output",ExpressionUUID->"0c69a0a9-e197-479a-b92e-bcd0a1f46c2d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualArrayQ",
              ButtonNote->"paclet:DualNumbers/ref/DualArrayQ"],
             "\"paclet:DualNumbers/ref/DualArrayQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualArrayQ[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid \
packed array of dual numbers.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualArrayQ", "[", 
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"DualNumbers`Private`a_", "?", "DualFreeArrayQ"}],
                     "+", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`b_", "?", "DualFreeArrayQ"}],
                     " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    PatternTest[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], DualNumbers`DualFreeArrayQ], 
                    PatternTest[
                    Pattern[DualNumbers`Private`b, 
                    Blank[]], DualNumbers`DualFreeArrayQ]]], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", "]"}],
                     "===", 
                    
                    RowBox[{
                    "Dimensions", "[", "DualNumbers`Private`b", "]"}]}]}], 
                    ":=", "True"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualArrayQ", "[", "_", "]"}], ":=", "False"}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualArrayQ", 
                    "paclet:DualNumbers/ref/DualArrayQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualArrayQ", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualArrayQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualArrayQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualArrayQ",
              ButtonNote->"paclet:DualNumbers/ref/DualArrayQ"],
             "\"paclet:DualNumbers/ref/DualArrayQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualArrayQ[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid \
packed array of dual numbers.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualArrayQ[\!\(\*StyleBox[\"expr\", \"TI\"]\)] tests if \
\!\(\*StyleBox[\"expr\", \"TI\"]\) is a valid packed array of dual numbers.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/DualArrayQ"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualArrayQ, {Condition[
         DualNumbers`DualArrayQ[
          DualNumbers`Dual[
           PatternTest[
            Pattern[DualNumbers`Private`a, 
             Blank[]], DualNumbers`DualFreeArrayQ], 
           PatternTest[
            Pattern[DualNumbers`Private`b, 
             Blank[]], DualNumbers`DualFreeArrayQ]]], 
         Dimensions[DualNumbers`Private`a] === 
         Dimensions[DualNumbers`Private`b]] :> True, DualNumbers`DualArrayQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualArrayQ, {
      SyntaxInformation[DualNumbers`DualArrayQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualArrayQ"|>, 
   False]]], "Output",ExpressionUUID->"15d2c7bd-7c63-48e4-9ece-af5c34bb7e12"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/UnpackDualArray",
              ButtonNote->"paclet:DualNumbers/ref/UnpackDualArray"],
             "\"paclet:DualNumbers/ref/UnpackDualArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UnpackDualArray[\\!\\(\\*StyleBox[\\\"dualArray\\\",\
 \\\"TI\\\"]\\)] reverses to operation of PackDualArray and creates an array \
of dual scalars.\\nProduces a message if packing messages have been turned on \
with On[\\\"Packing\\\"].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], ")"}], "?", "DualArrayQ"}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"DualNumbers`Private`packingMessagesEnabledQ", 
                    "[", "]"}], ",", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`a", 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "unpack"}], 
                    "MessageName"], ",", 
                    StyleBox[
                    RowBox[{"FromPackedArray", "::", "punpack1"}], 
                    "MessageName"]}], "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`b"}], "}"}], ",", 
                    
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`a", 
                    "]"}]}], "]"}]}], ")"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"UnpackDualArray", "[", 
                    
                    RowBox[{
                    "DualNumbers`Private`d_Dual", "?", "DualScalarQ"}], "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "notArray"}], 
                    "MessageName"], ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`d", "]"}]}], 
                    "]"}], ";", "DualNumbers`Private`d"}], ")"}]}]}, {" "}, {
                    RowBox[{
                    
                    RowBox[{
                    "UnpackDualArray", "[", "DualNumbers`Private`other_", 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"UnpackDualArray", "::", "badarray"}], 
                    "MessageName"], ",", 
                    
                    RowBox[{"Short", "[", "DualNumbers`Private`other", 
                    "]"}]}], "]"}], ";", "DualNumbers`Private`other"}], 
                    ")"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/UnpackDualArray", 
                    "paclet:DualNumbers/ref/UnpackDualArray", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "UnpackDualArray", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`UnpackDualArray] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`UnpackDualArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/UnpackDualArray",
              ButtonNote->"paclet:DualNumbers/ref/UnpackDualArray"],
             "\"paclet:DualNumbers/ref/UnpackDualArray\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UnpackDualArray[\\!\\(\\*StyleBox[\\\"dualArray\\\",\
 \\\"TI\\\"]\\)] reverses to operation of PackDualArray and creates an array \
of dual scalars.\\nProduces a message if packing messages have been turned on \
with On[\\\"Packing\\\"].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "UnpackDualArray[\!\(\*StyleBox[\"dualArray\", \"TI\"]\)] reverses to \
operation of PackDualArray and creates an array of dual scalars.\nProduces a \
message if packing messages have been turned on with On[\"Packing\"].", 
    "Documentation" -> <|
     "Local" -> "paclet:DualNumbers/ref/UnpackDualArray"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`UnpackDualArray, {DualNumbers`UnpackDualArray[
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ]] :> (If[
          DualNumbers`Private`packingMessagesEnabledQ[], 
          Quiet[
           Message[
            MessageName[DualNumbers`UnpackDualArray, "unpack"], 
            Dimensions[DualNumbers`Private`a]], {
            MessageName[Developer`FromPackedArray, "unpack"], 
            MessageName[Developer`FromPackedArray, "punpack1"]}]]; 
        MapThread[
         DualNumbers`Dual, {DualNumbers`Private`a, DualNumbers`Private`b}, 
          ArrayDepth[DualNumbers`Private`a]]), DualNumbers`UnpackDualArray[
         PatternTest[
          Pattern[DualNumbers`Private`d, 
           Blank[DualNumbers`Dual]], DualNumbers`DualScalarQ]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "notArray"], 
          Short[DualNumbers`Private`d]]; DualNumbers`Private`d), 
       DualNumbers`UnpackDualArray[
         Pattern[DualNumbers`Private`other, 
          Blank[]]] :> (Message[
          MessageName[DualNumbers`UnpackDualArray, "badarray"], 
          Short[DualNumbers`Private`other]]; DualNumbers`Private`other)}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`UnpackDualArray, {
      SyntaxInformation[DualNumbers`UnpackDualArray] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`UnpackDualArray"|>, 
   False]]], "Output",ExpressionUUID->"7f639de5-215e-4438-a14e-f5ff3691295e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFreeArrayQ",
              ButtonNote->"paclet:DualNumbers/ref/DualFreeArrayQ"],
             "\"paclet:DualNumbers/ref/DualFreeArrayQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFreeArrayQ[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an \
ordinary array that has no dual numbers at the deepest level.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DualFreeArrayQ", "[", 
                    RowBox[{"DualNumbers`Private`a_", "?", "PackedArrayQ"}], 
                    "]"}], ":=", "True"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualFreeArrayQ", "[", 
                    RowBox[{"DualNumbers`Private`a_", "?", "ArrayQ"}], "]"}], 
                    ":=", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"DualNumbers`Private`a", ",", "_Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{"ArrayDepth", "[", "DualNumbers`Private`a", "]"}],
                     "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualFreeArrayQ", "[", "_", "]"}], ":=", 
                    "False"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualFreeArrayQ", 
                    "paclet:DualNumbers/ref/DualFreeArrayQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualFreeArrayQ", "]"}],
                     "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualFreeArrayQ] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFreeArrayQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFreeArrayQ",
              ButtonNote->"paclet:DualNumbers/ref/DualFreeArrayQ"],
             "\"paclet:DualNumbers/ref/DualFreeArrayQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFreeArrayQ[\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\)] tests if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an \
ordinary array that has no dual numbers at the deepest level.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFreeArrayQ[\!\(\*StyleBox[\"expr\", \"TI\"]\)] tests if \
\!\(\*StyleBox[\"expr\", \"TI\"]\) is an ordinary array that has no dual \
numbers at the deepest level.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/DualFreeArrayQ"|>,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFreeArrayQ, {DualNumbers`DualFreeArrayQ[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], Developer`PackedArrayQ]] :> True, 
       DualNumbers`DualFreeArrayQ[
         PatternTest[
          Pattern[DualNumbers`Private`a, 
           Blank[]], ArrayQ]] :> FreeQ[DualNumbers`Private`a, 
         Blank[DualNumbers`Dual], {
          ArrayDepth[DualNumbers`Private`a]}, Heads -> False], 
       DualNumbers`DualFreeArrayQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualFreeArrayQ, {
      SyntaxInformation[DualNumbers`DualFreeArrayQ] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualFreeArrayQ"|>, 
   False]]], "Output",ExpressionUUID->"f875efa9-c271-4328-9058-47747ec933fc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities for working with dual numbers", \
"Subsubsection",ExpressionUUID->"f23b65fe-1114-4efe-bbe7-8816fce4afba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "DualApply"}], "\[IndentingNewLine]", 
 RowBox[{"?", 
  "AddDualHandling"}]}], \
"Input",ExpressionUUID->"e9a353da-1190-45c1-941a-8ffab2ded58e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualApply",
              ButtonNote->"paclet:DualNumbers/ref/DualApply"],
             "\"paclet:DualNumbers/ref/DualApply\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualApply[{\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\",\
 StyleBox[\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)}, Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]] returns \
Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"a\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\)], \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\nDualApply[{\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", \
StyleBox[\\\"All\\\", \\\"TI\\\"]], \\\"TI\\\"]\\)}, \
Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]] returns \
Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\
\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[1]], \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[2]]]. \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) should return a List of length \
2.\\nDualApply[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\), \
Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]] returns Dual[\\!\\(\\*StyleBox[\
\\\"f\\\", \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\)], \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\nDualApply[\\!\\(\\*StyleBox[\\\"fspec\\\", \
\\\"TI\\\"]\\), Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)], \\!\\(\\*StyleBox[\\\"lvlSpec\\\
\", \\\"TI\\\"]\\)] maps the function(s) to deeper levels of \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\).\\nDualApply[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)] is \
the operator form of DualApply.\\nDualApply[\\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\)] will use ToDual[\
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), 0] to cast standard quantities \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) to duals.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" SubValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"SubValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "SubValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "DualApply", "[", "DualNumbers`Private`fun_", "]"}], "[", 
                    "DualNumbers`Private`d_Dual", "]"}], ":=", 
                    RowBox[{"DualApply", "[", 
                    
                    RowBox[{
                    "DualNumbers`Private`fun", ",", "DualNumbers`Private`d"}],
                     "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]},
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" DownValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"DownValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "DownValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`funa_", ",", 
                    "DualNumbers`Private`funb_"}], "}"}], ",", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]]}], "]"}], ":=", 
                    InterpretationBox[
                    RowBox[{
                    
                    RowBox[{
                    "DualNumbers`Private`funa", "[", "DualNumbers`Private`a", 
                    "]"}], "+", 
                    RowBox[{
                    
                    RowBox[{
                    "DualNumbers`Private`funb", "[", "DualNumbers`Private`b", 
                    "]"}], " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    DualNumbers`Private`funa[DualNumbers`Private`a], 
                    DualNumbers`Private`funb[DualNumbers`Private`b]]]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`funa_", ",", 
                    "DualNumbers`Private`funb_"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], ")"}], "?", "DualArrayQ"}], ",", 
                    "DualNumbers`Private`spec_"}], "]"}], ":=", 
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"Map", "[", 
                    
                    RowBox[{
                    "DualNumbers`Private`funa", ",", "DualNumbers`Private`a", 
                    ",", "DualNumbers`Private`spec"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    
                    RowBox[{"DualNumbers`Private`funb", ",", 
                    "DualNumbers`Private`b", ",", 
                    "DualNumbers`Private`spec"}], "]"}], " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Map[
                    DualNumbers`Private`funa, DualNumbers`Private`a, 
                    DualNumbers`Private`spec], 
                    Map[
                    DualNumbers`Private`funb, DualNumbers`Private`b, 
                    DualNumbers`Private`spec]]]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]]}], "]"}], ":=", 
                    InterpretationBox[
                    RowBox[{
                    
                    RowBox[{
                    "DualNumbers`Private`fun", "[", "DualNumbers`Private`a", 
                    "]"}], "+", 
                    RowBox[{
                    
                    RowBox[{
                    "DualNumbers`Private`fun", "[", "DualNumbers`Private`b", 
                    "]"}], " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    DualNumbers`Private`fun[DualNumbers`Private`a], 
                    DualNumbers`Private`fun[DualNumbers`Private`b]]]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], ")"}], "?", "DualArrayQ"}], ",", 
                    "DualNumbers`Private`spec_"}], "]"}], ":=", 
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"Map", "[", 
                    
                    RowBox[{
                    "DualNumbers`Private`fun", ",", "DualNumbers`Private`a", 
                    ",", "DualNumbers`Private`spec"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    
                    RowBox[{"DualNumbers`Private`fun", ",", 
                    "DualNumbers`Private`b", ",", 
                    "DualNumbers`Private`spec"}], "]"}], " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Map[
                    DualNumbers`Private`fun, DualNumbers`Private`a, 
                    DualNumbers`Private`spec], 
                    Map[
                    DualNumbers`Private`fun, DualNumbers`Private`b, 
                    DualNumbers`Private`spec]]]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", "DualNumbers`Private`funAll_", "}"}], ",", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`try", "=", 
                    RowBox[{"DualNumbers`Private`funAll", "[", 
                    
                    RowBox[{"DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`b"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Dual", "@@", "DualNumbers`Private`try"}], "/;", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`try", ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "]"}], ",", 
                    RowBox[{"False", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DualApply", "::", "resultlength"}], 
                    "MessageName"], ",", 
                    
                    RowBox[{"Short", "[", "DualNumbers`Private`funAll", 
                    "]"}]}], "]"}], ";", "False"}], ")"}]}]}], "]"}]}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", "DualNumbers`Private`funAll_", "}"}], ",", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], ",", "0"}], "]"}], ":=", 
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", "DualNumbers`Private`funAll", "}"}], ",", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a", "+", 
                    
                    RowBox[{"DualNumbers`Private`b", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    DualNumbers`Private`a, DualNumbers`Private`b]]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", "DualNumbers`Private`funAll_", "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], ")"}], "?", "DualArrayQ"}], ",", 
                    
                    RowBox[{
                    "DualNumbers`Private`n_Integer", "?", "Positive"}]}], 
                    "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`try", "=", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"DualNumbers`Private`funAll", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`a", ",", 
                    "DualNumbers`Private`b"}], "}"}], ",", 
                    "DualNumbers`Private`n"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"PackDualArray", "[", 
                    RowBox[{"Dual", "@@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"DualNumbers`Private`try", ",", 
                    RowBox[{"1", "\[TwoWayRule]", 
                    RowBox[{"DualNumbers`Private`n", "+", "1"}]}]}], "]"}]}], 
                    "]"}], "/;", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    
                    RowBox[{"Dimensions", "[", "DualNumbers`Private`try", 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Repeated", "[", 
                    RowBox[{"_", ",", 
                    RowBox[{"{", "DualNumbers`Private`n", "}"}]}], "]"}], ",",
                     "2", ",", "___"}], "}"}]}], "]"}], ",", 
                    RowBox[{"False", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DualApply", "::", "resultlength"}], 
                    "MessageName"], ",", 
                    
                    RowBox[{"Short", "[", "DualNumbers`Private`funAll", 
                    "]"}]}], "]"}], ";", "False"}], ")"}]}]}], "]"}]}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{"DualNumbers`Private`f_", ",", 
                    RowBox[{"DualNumbers`Private`other", ":", 
                    RowBox[{"Except", "[", "_Dual", "]"}]}], ",", 
                    "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"DualApply", "[", 
                    RowBox[{"DualNumbers`Private`f", ",", 
                    RowBox[{"ToDual", "[", 
                    RowBox[{"DualNumbers`Private`other", ",", "0"}], "]"}], 
                    ",", "DualNumbers`Private`rest"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{"DualNumbers`Private`f_", ",", 
                    RowBox[{"_Dual", "?", "DualScalarQ"}], ",", 
                    "DualNumbers`Private`spec_"}], "]"}], "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DualApply", "::", "arraySpec"}], "MessageName"], 
                    ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`spec", "]"}]}],
                     "]"}], ";", "False"}], ")"}]}], ":=", "Undefined"}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"DualApply", "[", 
                    RowBox[{
                    RowBox[{"{", "DualNumbers`Private`f_", "}"}], ",", 
                    "_Dual", ",", 
                    RowBox[{"DualNumbers`Private`spec", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_Integer", "?", "Positive"}], "]"}]}]}], "]"}], 
                    "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DualApply", "::", "lvlSpec"}], "MessageName"], 
                    ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`spec", "]"}], 
                    ",", 
                    RowBox[{"Short", "[", 
                    RowBox[{"{", "DualNumbers`Private`f", "}"}], "]"}]}], 
                    "]"}], ";", "False"}], ")"}]}], ":=", "Undefined"}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualApply", 
                    "paclet:DualNumbers/ref/DualApply", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualApply", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualApply] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualApply\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualApply",
              ButtonNote->"paclet:DualNumbers/ref/DualApply"],
             "\"paclet:DualNumbers/ref/DualApply\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualApply[{\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\",\
 StyleBox[\\\"a\\\", \\\"TI\\\"]], \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)}, Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]] returns \
Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"a\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\)], \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\nDualApply[{\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", \
StyleBox[\\\"All\\\", \\\"TI\\\"]], \\\"TI\\\"]\\)}, \
Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]] returns \
Dual[\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\
\"]], \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[1]], \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)][[2]]]. \
\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"All\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) should return a List of length \
2.\\nDualApply[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\), \
Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)]] returns Dual[\\!\\(\\*StyleBox[\
\\\"f\\\", \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\)], \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)[\\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\)]].\\nDualApply[\\!\\(\\*StyleBox[\\\"fspec\\\", \
\\\"TI\\\"]\\), Dual[\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)], \\!\\(\\*StyleBox[\\\"lvlSpec\\\
\", \\\"TI\\\"]\\)] maps the function(s) to deeper levels of \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"b\\\", \
\\\"TI\\\"]\\).\\nDualApply[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\)] is \
the operator form of DualApply.\\nDualApply[\\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\)] will use ToDual[\
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), 0] to cast standard quantities \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) to duals.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualApply[{\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"a\", \"TI\"]], \
\"TI\"]\), \!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"b\", \"TI\"]], \
\"TI\"]\)}, Dual[\!\(\*StyleBox[\"a\", \"TI\"]\), \!\(\*StyleBox[\"b\", \
\"TI\"]\)]] returns Dual[\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"a\", \
\"TI\"]], \"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\)], \
\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"b\", \"TI\"]], \
\"TI\"]\)[\!\(\*StyleBox[\"b\", \"TI\"]\)]].\n\
DualApply[{\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"All\", \"TI\"]], \
\"TI\"]\)}, Dual[\!\(\*StyleBox[\"a\", \"TI\"]\), \!\(\*StyleBox[\"b\", \
\"TI\"]\)]] returns Dual[\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"All\", \
\"TI\"]], \"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\), \!\(\*StyleBox[\"b\", \
\"TI\"]\)][[1]], \!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"All\", \
\"TI\"]], \"TI\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\), \!\(\*StyleBox[\"b\", \
\"TI\"]\)][[2]]]. \!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"All\", \
\"TI\"]], \"TI\"]\) should return a List of length 2.\n\
DualApply[\!\(\*StyleBox[\"f\", \"TI\"]\), Dual[\!\(\*StyleBox[\"a\", \"TI\"]\
\), \!\(\*StyleBox[\"b\", \"TI\"]\)]] returns Dual[\!\(\*StyleBox[\"f\", \"TI\
\"]\)[\!\(\*StyleBox[\"a\", \"TI\"]\)], \!\(\*StyleBox[\"f\", \
\"TI\"]\)[\!\(\*StyleBox[\"b\", \"TI\"]\)]].\n\
DualApply[\!\(\*StyleBox[\"fspec\", \"TI\"]\), Dual[\!\(\*StyleBox[\"a\", \
\"TI\"]\), \!\(\*StyleBox[\"b\", \"TI\"]\)], \!\(\*StyleBox[\"lvlSpec\", \"TI\
\"]\)] maps the function(s) to deeper levels of \!\(\*StyleBox[\"a\", \"TI\"]\
\) and \!\(\*StyleBox[\"b\", \"TI\"]\).\nDualApply[\!\(\*StyleBox[\"f\", \"TI\
\"]\)] is the operator form of DualApply.\nDualApply[\!\(\*StyleBox[\"f\", \
\"TI\"]\), \!\(\*StyleBox[\"x\", \"TI\"]\)] will use \
ToDual[\!\(\*StyleBox[\"x\", \"TI\"]\), 0] to cast standard quantities \
\!\(\*StyleBox[\"x\", \"TI\"]\) to duals.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/DualApply"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualApply, {DualNumbers`DualApply[{
          Pattern[DualNumbers`Private`funa, 
           Blank[]], 
          Pattern[DualNumbers`Private`funb, 
           Blank[]]}, 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         DualNumbers`Private`funa[DualNumbers`Private`a], 
         DualNumbers`Private`funb[DualNumbers`Private`b]], 
       DualNumbers`DualApply[{
          Pattern[DualNumbers`Private`funa, 
           Blank[]], 
          Pattern[DualNumbers`Private`funb, 
           Blank[]]}, 
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ], 
         Pattern[DualNumbers`Private`spec, 
          Blank[]]] :> DualNumbers`Dual[
         Map[
         DualNumbers`Private`funa, DualNumbers`Private`a, 
          DualNumbers`Private`spec], 
         Map[
         DualNumbers`Private`funb, DualNumbers`Private`b, 
          DualNumbers`Private`spec]], DualNumbers`DualApply[
         Pattern[DualNumbers`Private`fun, 
          Except[
           Blank[List]]], 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> DualNumbers`Dual[
         DualNumbers`Private`fun[DualNumbers`Private`a], 
         DualNumbers`Private`fun[DualNumbers`Private`b]], 
       DualNumbers`DualApply[
         Pattern[DualNumbers`Private`fun, 
          Except[
           Blank[List]]], 
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ], 
         Pattern[DualNumbers`Private`spec, 
          Blank[]]] :> DualNumbers`Dual[
         Map[
         DualNumbers`Private`fun, DualNumbers`Private`a, 
          DualNumbers`Private`spec], 
         Map[
         DualNumbers`Private`fun, DualNumbers`Private`b, 
          DualNumbers`Private`spec]], DualNumbers`DualApply[{
          Pattern[DualNumbers`Private`funAll, 
           Blank[]]}, 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]]] :> 
       With[{DualNumbers`Private`try = 
          DualNumbers`Private`funAll[
           DualNumbers`Private`a, DualNumbers`Private`b]}, 
         Condition[
          Apply[DualNumbers`Dual, DualNumbers`Private`try], 
          Replace[
           MatchQ[DualNumbers`Private`try, {
             Blank[], 
             Blank[]}], False :> (Message[
              MessageName[DualNumbers`DualApply, "resultlength"], 
              Short[DualNumbers`Private`funAll]]; False)]]], 
       DualNumbers`DualApply[{
          Pattern[DualNumbers`Private`funAll, 
           Blank[]]}, 
         DualNumbers`Dual[
          Pattern[DualNumbers`Private`a, 
           Blank[]], 
          Pattern[DualNumbers`Private`b, 
           Blank[]]], 0] :> 
       DualNumbers`DualApply[{DualNumbers`Private`funAll}, 
         DualNumbers`Dual[DualNumbers`Private`a, DualNumbers`Private`b]], 
       DualNumbers`DualApply[{
          Pattern[DualNumbers`Private`funAll, 
           Blank[]]}, 
         PatternTest[
          DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]], DualNumbers`DualArrayQ], 
         PatternTest[
          Pattern[DualNumbers`Private`n, 
           Blank[Integer]], Positive]] :> 
       With[{DualNumbers`Private`try = 
          MapThread[
           DualNumbers`Private`funAll, {
            DualNumbers`Private`a, DualNumbers`Private`b}, 
            DualNumbers`Private`n]}, 
         Condition[
          DualNumbers`PackDualArray[
           Apply[DualNumbers`Dual, 
            Transpose[DualNumbers`Private`try, 
             TwoWayRule[1, DualNumbers`Private`n + 1]]]], 
          Replace[
           MatchQ[
            Dimensions[DualNumbers`Private`try], {
             Repeated[
              Blank[], {DualNumbers`Private`n}], 2, 
             BlankNullSequence[]}], False :> (Message[
              MessageName[DualNumbers`DualApply, "resultlength"], 
              Short[DualNumbers`Private`funAll]]; False)]]], 
       DualNumbers`DualApply[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         Pattern[DualNumbers`Private`other, 
          Except[
           Blank[DualNumbers`Dual]]], 
         Pattern[DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualApply[DualNumbers`Private`f, 
         DualNumbers`ToDual[DualNumbers`Private`other, 0], 
         DualNumbers`Private`rest], Condition[
         DualNumbers`DualApply[
          Pattern[DualNumbers`Private`f, 
           Blank[]], 
          PatternTest[
           Blank[DualNumbers`Dual], DualNumbers`DualScalarQ], 
          Pattern[DualNumbers`Private`spec, 
           Blank[]]], Message[
           MessageName[DualNumbers`DualApply, "arraySpec"], 
           Short[DualNumbers`Private`spec]]; False] :> Undefined, Condition[
         DualNumbers`DualApply[{
           Pattern[DualNumbers`Private`f, 
            Blank[]]}, 
          Blank[DualNumbers`Dual], 
          Pattern[DualNumbers`Private`spec, 
           Except[
            PatternTest[
             Blank[Integer], Positive]]]], Message[
           MessageName[DualNumbers`DualApply, "lvlSpec"], 
           Short[DualNumbers`Private`spec], 
           Short[{DualNumbers`Private`f}]]; False] :> Undefined}], 
    "SubValues" -> 
    Information`InformationValueForm[
     SubValues, DualNumbers`DualApply, {DualNumbers`DualApply[
         Pattern[DualNumbers`Private`fun, 
          Blank[]]][
         Pattern[DualNumbers`Private`d, 
          Blank[DualNumbers`Dual]]] :> 
       DualNumbers`DualApply[
        DualNumbers`Private`fun, DualNumbers`Private`d]}], "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualApply, {
      SyntaxInformation[DualNumbers`DualApply] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualApply"|>, 
   False]]], "Output",ExpressionUUID->"1076ef84-90bf-48a8-b930-e3e2158c387d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/AddDualHandling",
              ButtonNote->"paclet:DualNumbers/ref/AddDualHandling"],
             "\"paclet:DualNumbers/ref/AddDualHandling\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AddDualHandling[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\
\\\"]\\), {\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\)}] specifies derivatives for \\!\\(\\*StyleBox[\\\
\"f\\\", \\\"TI\\\"]\\) to use with Dual numbers when called with \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
arguments.\\nAddDualHandling[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\), \\!\
\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)] uses Derivative to infer \
derivatives of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with \\!\\(\\*StyleBox[\
\\\"n\\\", \\\"TI\\\"]\\) \
arguments.\\nAddDualHandling[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\), \
{\\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]\\)}] uses Derivative to infer derivatives of \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\) for when \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called \
with \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]\\), \[Ellipsis] arguments.\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f_", ",", 
                    
                    RowBox[{
                    "DualNumbers`Private`n_Integer", "?", "Positive"}]}], 
                    "]"}], ":=", 
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["DualNumbers`Private`f", 
                    TagBox[
                    RowBox[{"(", "##1", ")"}], Derivative], MultilineFunction -> 
                    None], "&"}], ")"}], "@@@", 
                    
                    RowBox[{"IdentityMatrix", "[", "DualNumbers`Private`n", 
                    "]"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f_", ",", 
                    RowBox[{"DualNumbers`Private`nList", ":", 
                    RowBox[{"{", 
                    RowBox[{"__Integer", "?", "Positive"}], "}"}]}]}], "]"}], 
                    ":=", 
                    RowBox[{"Scan", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f", ",", "#1"}], "]"}], 
                    "&"}], ",", "DualNumbers`Private`nList"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    
                    RowBox[{
                    "DualNumbers`Private`f_", ",", 
                    "DualNumbers`Private`derivatives_List"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`n", "=", 
                    
                    RowBox[{"Length", "[", "DualNumbers`Private`derivatives", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Dual", "/:", 
                    RowBox[{"DualNumbers`Private`f", "[", 
                    
                    RowBox[{"DualNumbers`Private`first___", ",", 
                    "DualNumbers`Private`d_Dual", ",", 
                    "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`args", "=", 
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`first", ",", 
                    "DualNumbers`Private`d", ",", 
                    "DualNumbers`Private`rest"}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`dualPos", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"DualNumbers`Private`listPosition", "[", 
                    
                    RowBox[{"DualNumbers`Private`args", ",", 
                    "DualNumbers`Private`dualPatt"}], "]"}], "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`inputs", "=", 
                    
                    RowBox[{"Standard", "[", "DualNumbers`Private`args", 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`dlist", "=", 
                    
                    RowBox[{"DualNumbers`Private`derivatives", 
                    "\[LeftDoubleBracket]", "DualNumbers`Private`dualPos", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    
                    RowBox[{"DualNumbers`Private`f", "@@", 
                    "DualNumbers`Private`inputs"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Through", "[", 
                    RowBox[{"DualNumbers`Private`dlist", "[", 
                    RowBox[{"Sequence", "@@", "DualNumbers`Private`inputs"}], 
                    "]"}], "]"}], ".", 
                    
                    RowBox[{"DualNumbers`Private`args", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"DualNumbers`Private`dualPos", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Apply[DualNumbers`Private`f, DualNumbers`Private`inputs], 
                    Dot[
                    Through[
                    DualNumbers`Private`dlist[
                    Apply[Sequence, DualNumbers`Private`inputs]]], 
                    Part[
                    DualNumbers`Private`args, DualNumbers`Private`dualPos, 
                    2]]]], "/;", 
                    
                    RowBox[{"ListQ", "[", "DualNumbers`Private`dlist", 
                    "]"}]}]}], "]"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Length", "[", "DualNumbers`Private`args", "]"}], 
                    "===", "DualNumbers`Private`n"}]}]}], "]"}]}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"AddDualHandling", "[", 
                    
                    RowBox[{
                    "DualNumbers`Private`f_", ",", "DualNumbers`Private`g_"}],
                     "]"}], ":=", 
                    RowBox[{"AddDualHandling", "[", 
                    RowBox[{"DualNumbers`Private`f", ",", 
                    RowBox[{"{", "DualNumbers`Private`g", "}"}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/AddDualHandling", 
                    "paclet:DualNumbers/ref/AddDualHandling", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "AddDualHandling", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`AddDualHandling] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`AddDualHandling\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/AddDualHandling",
              ButtonNote->"paclet:DualNumbers/ref/AddDualHandling"],
             "\"paclet:DualNumbers/ref/AddDualHandling\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AddDualHandling[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\
\\\"]\\), {\\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"f\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\)}] specifies derivatives for \\!\\(\\*StyleBox[\\\
\"f\\\", \\\"TI\\\"]\\) to use with Dual numbers when called with \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
arguments.\\nAddDualHandling[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\), \\!\
\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)] uses Derivative to infer \
derivatives of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) for when \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called with \\!\\(\\*StyleBox[\
\\\"n\\\", \\\"TI\\\"]\\) \
arguments.\\nAddDualHandling[\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\), \
{\\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]\\)}] uses Derivative to infer derivatives of \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\) for when \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) is called \
with \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\), \\!\\(\\*StyleBox[SubscriptBox[\\\"n\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]\\), \[Ellipsis] arguments.\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "AddDualHandling[\!\(\*StyleBox[\"f\", \"TI\"]\), \
{\!\(\*StyleBox[SubscriptBox[\"f\", StyleBox[\"1\", \"TR\"]], \"TI\"]\), \!\(\
\*StyleBox[\"\[Ellipsis]\", \"TR\"]\), \!\(\*StyleBox[SubscriptBox[\"f\", \
StyleBox[\"n\", \"TI\"]], \"TI\"]\)}] specifies derivatives for \
\!\(\*StyleBox[\"f\", \"TI\"]\) to use with Dual numbers when called with \
\!\(\*StyleBox[\"n\", \"TI\"]\) arguments.\n\
AddDualHandling[\!\(\*StyleBox[\"f\", \"TI\"]\), \!\(\*StyleBox[\"n\", \
\"TI\"]\)] uses Derivative to infer derivatives of \!\(\*StyleBox[\"f\", \"TI\
\"]\) for when \!\(\*StyleBox[\"f\", \"TI\"]\) is called with \!\(\*StyleBox[\
\"n\", \"TI\"]\) arguments.\nAddDualHandling[\!\(\*StyleBox[\"f\", \"TI\"]\), \
{\!\(\*StyleBox[SubscriptBox[\"n\", StyleBox[\"1\", \"TR\"]], \"TI\"]\), \!\(\
\*StyleBox[SubscriptBox[\"n\", StyleBox[\"2\", \"TR\"]], \"TI\"]\), \
\!\(\*StyleBox[\"\[Ellipsis]\", \"TR\"]\)}] uses Derivative to infer \
derivatives of \!\(\*StyleBox[\"f\", \"TI\"]\) for when \!\(\*StyleBox[\"f\", \
\"TI\"]\) is called with \!\(\*StyleBox[SubscriptBox[\"n\", StyleBox[\"1\", \
\"TR\"]], \"TI\"]\), \!\(\*StyleBox[SubscriptBox[\"n\", StyleBox[\"2\", \
\"TR\"]], \"TI\"]\), \[Ellipsis] arguments.", 
    "Documentation" -> <|
     "Local" -> "paclet:DualNumbers/ref/AddDualHandling"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`AddDualHandling, {DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         PatternTest[
          Pattern[DualNumbers`Private`n, 
           Blank[Integer]], Positive]] :> 
       DualNumbers`AddDualHandling[DualNumbers`Private`f, 
         MapApply[Derivative[
           SlotSequence[1]][DualNumbers`Private`f]& , 
          IdentityMatrix[DualNumbers`Private`n]]], DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         Pattern[DualNumbers`Private`nList, {
           PatternTest[
            BlankSequence[Integer], Positive]}]] :> 
       Scan[DualNumbers`AddDualHandling[DualNumbers`Private`f, #]& , 
         DualNumbers`Private`nList], DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         Pattern[DualNumbers`Private`derivatives, 
          Blank[List]]] :> 
       With[{DualNumbers`Private`n = Length[DualNumbers`Private`derivatives]}, 
         TagSetDelayed[DualNumbers`Dual, 
          DualNumbers`Private`f[
           Pattern[DualNumbers`Private`first, 
            BlankNullSequence[]], 
           Pattern[DualNumbers`Private`d, 
            Blank[DualNumbers`Dual]], 
           Pattern[DualNumbers`Private`rest, 
            BlankNullSequence[]]], 
          
          With[{DualNumbers`Private`args = {
             DualNumbers`Private`first, DualNumbers`Private`d, 
              DualNumbers`Private`rest}}, 
           Condition[
            With[{DualNumbers`Private`dualPos = Flatten[
                DualNumbers`Private`listPosition[
                DualNumbers`Private`args, DualNumbers`Private`dualPatt]], 
              DualNumbers`Private`inputs = 
              DualNumbers`Standard[DualNumbers`Private`args]}, 
             
             With[{DualNumbers`Private`dlist = 
               Part[DualNumbers`Private`derivatives, 
                 DualNumbers`Private`dualPos]}, 
              Condition[
               DualNumbers`Dual[
                Apply[DualNumbers`Private`f, DualNumbers`Private`inputs], 
                Dot[
                 Through[
                  DualNumbers`Private`dlist[
                   Apply[Sequence, DualNumbers`Private`inputs]]], 
                 Part[
                 DualNumbers`Private`args, DualNumbers`Private`dualPos, 2]]], 
               ListQ[DualNumbers`Private`dlist]]]], 
            Length[DualNumbers`Private`args] === DualNumbers`Private`n]]]], 
       DualNumbers`AddDualHandling[
         Pattern[DualNumbers`Private`f, 
          Blank[]], 
         Pattern[DualNumbers`Private`g, 
          Blank[]]] :> 
       DualNumbers`AddDualHandling[
        DualNumbers`Private`f, {DualNumbers`Private`g}]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`AddDualHandling, {
      SyntaxInformation[DualNumbers`AddDualHandling] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`AddDualHandling"|>, 
   False]]], "Output",ExpressionUUID->"d850647d-0447-469b-90b0-a6da67672d54"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic manipulation of dual numbers", \
"Subsubsection",ExpressionUUID->"643a1f25-ba12-47c8-bcbd-35666c34f86b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "\[CurlyEpsilon]"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualExpand"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFactor"}], "\[IndentingNewLine]", 
 RowBox[{"?", 
  "DualSimplify"}], "\[IndentingNewLine]"}], \
"Input",ExpressionUUID->"7ea40ed3-fe9a-4c7c-8a93-08056a9f06a5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\[CurlyEpsilon] is an inactive form of Dual[0, 1] \
that can be used for algebraic manipulation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`\[CurlyEpsilon]\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\[CurlyEpsilon] is an inactive form of Dual[0, 1] \
that can be used for algebraic manipulation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\[CurlyEpsilon] is an inactive form of Dual[0, 1] that can be used for \
algebraic manipulation.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "DualNumbers`\[CurlyEpsilon]"|>, 
   False]]], "Output",ExpressionUUID->"1d737ce0-1296-4b14-895f-216a864ffb7f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualExpand",
              ButtonNote->"paclet:DualNumbers/ref/DualExpand"],
             "\"paclet:DualNumbers/ref/DualExpand\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualExpand[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\)] replaces each dual number Dual[\\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] with \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) + \\!\\(\\*StyleBox[\\\"b\\\", \\\
\"TI\\\"]\\) \[CurlyEpsilon].\\nDualExpand[\\!\\(\\*StyleBox[\\\"expr\\\", \\\
\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\)] uses \
\\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\) instead.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DualExpand", "[", 
                    RowBox[{"DualNumbers`Private`expr_", ",", 
                    
                    RowBox[{
                    "DualNumbers`Private`eps_", ":", "\[CurlyEpsilon]"}]}], 
                    "]"}], ":=", 
                    
                    RowBox[{
                    "DualNumbers`Private`expr", "//.", "\[VeryThinSpace]", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{"DualNumbers`Private`a_", "+", 
                    
                    RowBox[{"DualNumbers`Private`b_", " ", 
                    "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    Pattern[DualNumbers`Private`a, 
                    Blank[]], 
                    Pattern[DualNumbers`Private`b, 
                    Blank[]]]], "\[RuleDelayed]", 
                    RowBox[{"DualNumbers`Private`a", "+", 
                    
                    RowBox[{"DualNumbers`Private`b", " ", 
                    "DualNumbers`Private`eps"}]}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualExpand", 
                    "paclet:DualNumbers/ref/DualExpand", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualExpand", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualExpand] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualExpand\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualExpand",
              ButtonNote->"paclet:DualNumbers/ref/DualExpand"],
             "\"paclet:DualNumbers/ref/DualExpand\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualExpand[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\)] replaces each dual number Dual[\\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\)] with \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) + \\!\\(\\*StyleBox[\\\"b\\\", \\\
\"TI\\\"]\\) \[CurlyEpsilon].\\nDualExpand[\\!\\(\\*StyleBox[\\\"expr\\\", \\\
\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\)] uses \
\\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\) instead.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualExpand[\!\(\*StyleBox[\"expr\", \"TI\"]\)] replaces each dual number \
Dual[\!\(\*StyleBox[\"a\", \"TI\"]\), \!\(\*StyleBox[\"b\", \"TI\"]\)] with \
\!\(\*StyleBox[\"a\", \"TI\"]\) + \!\(\*StyleBox[\"b\", \"TI\"]\) \
\[CurlyEpsilon].\nDualExpand[\!\(\*StyleBox[\"expr\", \"TI\"]\), \
\!\(\*StyleBox[\"eps\", \"TI\"]\)] uses \!\(\*StyleBox[\"eps\", \"TI\"]\) \
instead.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/DualExpand"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualExpand, {DualNumbers`DualExpand[
         Pattern[DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`eps, 
           Blank[]], DualNumbers`\[CurlyEpsilon]]] :> 
       ReplaceRepeated[DualNumbers`Private`expr, DualNumbers`Dual[
           Pattern[DualNumbers`Private`a, 
            Blank[]], 
           Pattern[DualNumbers`Private`b, 
            Blank[]]] :> 
         DualNumbers`Private`a + 
          DualNumbers`Private`b DualNumbers`Private`eps]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualExpand, {
      SyntaxInformation[DualNumbers`DualExpand] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualExpand"|>, 
   False]]], "Output",ExpressionUUID->"cdf560fd-273d-4eb5-8e60-82a679863e81"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFactor",
              ButtonNote->"paclet:DualNumbers/ref/DualFactor"],
             "\"paclet:DualNumbers/ref/DualFactor\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFactor[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\)] replaces \[CurlyEpsilon] with Dual[0, 1] in \
\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\).\\nDualFactor[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\)] uses \\!\\(\\*StyleBox[\\\"eps\
\\\", \\\"TI\\\"]\\) instead.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DualFactor", "[", 
                    RowBox[{"DualNumbers`Private`expr_", ",", 
                    
                    RowBox[{
                    "DualNumbers`Private`eps_", ":", "\[CurlyEpsilon]"}]}], 
                    "]"}], ":=", 
                    
                    RowBox[{
                    "DualNumbers`Private`expr", "//.", "\[VeryThinSpace]", 
                    RowBox[{"DualNumbers`Private`eps", "\[RuleDelayed]", 
                    InterpretationBox[
                    RowBox[{"0", "+", 
                    RowBox[{"1", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[0, 1]]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualFactor", 
                    "paclet:DualNumbers/ref/DualFactor", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualFactor", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualFactor] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFactor\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFactor",
              ButtonNote->"paclet:DualNumbers/ref/DualFactor"],
             "\"paclet:DualNumbers/ref/DualFactor\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFactor[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\)] replaces \[CurlyEpsilon] with Dual[0, 1] in \
\\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\).\\nDualFactor[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\)] uses \\!\\(\\*StyleBox[\\\"eps\
\\\", \\\"TI\\\"]\\) instead.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFactor[\!\(\*StyleBox[\"expr\", \"TI\"]\)] replaces \[CurlyEpsilon] \
with Dual[0, 1] in \!\(\*StyleBox[\"expr\", \"TI\"]\).\n\
DualFactor[\!\(\*StyleBox[\"expr\", \"TI\"]\), \!\(\*StyleBox[\"eps\", \
\"TI\"]\)] uses \!\(\*StyleBox[\"eps\", \"TI\"]\) instead.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/DualFactor"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFactor, {DualNumbers`DualFactor[
         Pattern[DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`eps, 
           Blank[]], DualNumbers`\[CurlyEpsilon]]] :> 
       ReplaceRepeated[
        DualNumbers`Private`expr, DualNumbers`Private`eps :> 
         DualNumbers`Dual[0, 1]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualFactor, {
      SyntaxInformation[DualNumbers`DualFactor] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFactor"|>, 
   False]]], "Output",ExpressionUUID->"e037f1d9-1572-48fe-8cfd-56da5b682230"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualSimplify",
              ButtonNote->"paclet:DualNumbers/ref/DualSimplify"],
             "\"paclet:DualNumbers/ref/DualSimplify\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualSimplify[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\
\\\"]\\)] expands \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) around \
\[CurlyEpsilon] = 0, keeping only the 0th and 1st order \
terms.\\nDualSimplify[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\)] uses \\!\\(\\*StyleBox[\\\"eps\
\\\", \\\"TI\\\"]\\) as symbol for the dual unit.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DualSimplify", "[", 
                    RowBox[{"DualNumbers`Private`expr_", ",", 
                    
                    RowBox[{
                    "DualNumbers`Private`eps_", ":", "\[CurlyEpsilon]"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"Series", "[", 
                    RowBox[{"DualNumbers`Private`expr", ",", 
                    RowBox[{"{", 
                    RowBox[{"DualNumbers`Private`eps", ",", "0", ",", "1"}], 
                    "}"}]}], "]"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualSimplify", 
                    "paclet:DualNumbers/ref/DualSimplify", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DualSimplify", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualSimplify] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualSimplify\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualSimplify",
              ButtonNote->"paclet:DualNumbers/ref/DualSimplify"],
             "\"paclet:DualNumbers/ref/DualSimplify\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualSimplify[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\
\\\"]\\)] expands \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) around \
\[CurlyEpsilon] = 0, keeping only the 0th and 1st order \
terms.\\nDualSimplify[\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"eps\\\", \\\"TI\\\"]\\)] uses \\!\\(\\*StyleBox[\\\"eps\
\\\", \\\"TI\\\"]\\) as symbol for the dual unit.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualSimplify[\!\(\*StyleBox[\"expr\", \"TI\"]\)] expands \!\(\*StyleBox[\
\"expr\", \"TI\"]\) around \[CurlyEpsilon] = 0, keeping only the 0th and 1st \
order terms.\nDualSimplify[\!\(\*StyleBox[\"expr\", \"TI\"]\), \
\!\(\*StyleBox[\"eps\", \"TI\"]\)] uses \!\(\*StyleBox[\"eps\", \"TI\"]\) as \
symbol for the dual unit.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/DualSimplify"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualSimplify, {DualNumbers`DualSimplify[
         Pattern[DualNumbers`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[DualNumbers`Private`eps, 
           Blank[]], DualNumbers`\[CurlyEpsilon]]] :> Normal[
         Series[DualNumbers`Private`expr, {DualNumbers`Private`eps, 0, 1}]]}],
     "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualSimplify, {
      SyntaxInformation[DualNumbers`DualSimplify] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "DualNumbers`DualSimplify"|>, 
   False]]], "Output",ExpressionUUID->"857e88ee-923a-4a25-b42f-da291494c26d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation solving and optimization", \
"Subsubsection",ExpressionUUID->"12cf237a-1fd9-4299-b831-4449eda98c2d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "DualFindRoot"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFindMinimum"}], "\[IndentingNewLine]", 
 RowBox[{"?", "DualFindMaximum"}], "\[IndentingNewLine]", 
 RowBox[{"?", 
  "FindDualSolution"}]}], \
"Input",ExpressionUUID->"682653f7-3b28-4eeb-976f-b4dedabf2c59"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFindRoot",
              ButtonNote->"paclet:DualNumbers/ref/DualFindRoot"],
             "\"paclet:DualNumbers/ref/DualFindRoot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindRoot works like FindRoot, but allows for \
Dual numbers in the equations.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"DualNumbers`Private`eq_", ",", 
                    RowBox[{"DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"DualNumbers`Private`eq", ",", 
                    RowBox[{"{", "DualNumbers`Private`spec", "}"}], ",", 
                    "DualNumbers`Private`rest"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualFindRoot", "[", 
                    RowBox[{"DualNumbers`Private`eqs_", ",", 
                    RowBox[{"DualNumbers`Private`spec", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "DualNumbers`Private`rest___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    
                    RowBox[{"DualNumbers`Private`equationNormalForm", "[", 
                    "DualNumbers`Private`eqs", "]"}]}], ",", 
                    "DualNumbers`Private`stdEqs", ",", 
                    "DualNumbers`Private`stdSol"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"FailureQ", "[", "DualNumbers`Private`equations", 
                    "]"}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"$Failed", ",", "Module"}], "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`stdEqs", "=", 
                    
                    RowBox[{"Subtract", "@@@", 
                    "DualNumbers`Private`equations"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdEqs", "=", 
                    RowBox[{"StandardAll", "[", 
                    
                    RowBox[{"DualFactor", "[", "DualNumbers`Private`stdEqs", 
                    "]"}], "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdSol", "=", 
                    RowBox[{"FindRoot", "[", 
                    
                    RowBox[{"DualNumbers`Private`stdEqs", ",", 
                    "DualNumbers`Private`spec", ",", 
                    "DualNumbers`Private`rest"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`stdSol", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"$Failed", ",", "Module"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    
                    RowBox[{"DualNumbers`Private`equations", ",", 
                    "DualNumbers`Private`stdSol"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualFindRoot", 
                    "paclet:DualNumbers/ref/DualFindRoot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFindRoot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFindRoot",
              ButtonNote->"paclet:DualNumbers/ref/DualFindRoot"],
             "\"paclet:DualNumbers/ref/DualFindRoot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindRoot works like FindRoot, but allows for \
Dual numbers in the equations.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindRoot works like FindRoot, but allows for Dual numbers in the \
equations.", 
    "Documentation" -> <|"Local" -> "paclet:DualNumbers/ref/DualFindRoot"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFindRoot, {DualNumbers`DualFindRoot[
         Pattern[DualNumbers`Private`eq, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualFindRoot[
        DualNumbers`Private`eq, {DualNumbers`Private`spec}, 
         DualNumbers`Private`rest], DualNumbers`DualFindRoot[
         Pattern[DualNumbers`Private`eqs, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[DualNumbers`Private`rest, 
          BlankNullSequence[]]] :> 
       Module[{DualNumbers`Private`equations = 
          DualNumbers`Private`equationNormalForm[DualNumbers`Private`eqs], 
          DualNumbers`Private`stdEqs, DualNumbers`Private`stdSol}, If[
           FailureQ[DualNumbers`Private`equations], 
           Return[$Failed, Module]]; 
         DualNumbers`Private`stdEqs = 
          MapApply[Subtract, DualNumbers`Private`equations]; 
         DualNumbers`Private`stdEqs = DualNumbers`StandardAll[
            DualNumbers`DualFactor[DualNumbers`Private`stdEqs]]; 
         DualNumbers`Private`stdSol = 
          FindRoot[
           DualNumbers`Private`stdEqs, DualNumbers`Private`spec, 
            DualNumbers`Private`rest]; If[
           Not[
            MatchQ[DualNumbers`Private`stdSol, {
              Repeated[Blank[] -> PatternTest[
                 Blank[], NumericQ]]}]], 
           Return[$Failed, Module]]; Quiet[
           DualNumbers`Private`firstSol[
            DualNumbers`FindDualSolution[
            DualNumbers`Private`equations, DualNumbers`Private`stdSol]], {
            MessageName[DualNumbers`FindDualSolution, "nonsol"]}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFindRoot"|>, 
   False]]], "Output",ExpressionUUID->"2f445e33-fa13-4b14-92ad-37281d5b923c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFindMinimum",
              ButtonNote->"paclet:DualNumbers/ref/DualFindMinimum"],
             "\"paclet:DualNumbers/ref/DualFindMinimum\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMinimum works like FindMinimum, but allows \
for Dual numbers in the objective function.\\nDualFindMinimum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{"DualNumbers`Private`eq$_", ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{"DualNumbers`Private`eq$", ",", 
                    RowBox[{"{", "DualNumbers`Private`spec$", "}"}], ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualFindMinimum", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun$", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"DualNumbers`Private`vars$", "=", 
                    
                    RowBox[{"DualNumbers`Private`spec$", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`stdfun$", "=", 
                    RowBox[{"StandardAll", "[", 
                    
                    RowBox[{"DualFactor", "[", "DualNumbers`Private`fun$", 
                    "]"}], "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdSol$", "=", 
                    RowBox[{"FindMinimum", "[", 
                    
                    RowBox[{"DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`spec$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"$Failed", ",", "Module"}], "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`dualSol$", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[PartialD]", 
                    RowBox[{
                    RowBox[{"{", "DualNumbers`Private`vars$", "}"}]}]], 
                    "DualNumbers`Private`fun$"}], ",", 
                    
                    RowBox[{"Last", "[", "DualNumbers`Private`stdSol$", 
                    "]"}]}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`dualSol$", ",", 
                    RowBox[{"{", "__Rule", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"DualNumbers`Private`fun$", "/.", 
                    "\[VeryThinSpace]", "DualNumbers`Private`dualSol$"}], ",",
                     "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "]"}]}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualFindMinimum", 
                    "paclet:DualNumbers/ref/DualFindMinimum", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "DualFindMinimum", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualFindMinimum] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFindMinimum\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFindMinimum",
              ButtonNote->"paclet:DualNumbers/ref/DualFindMinimum"],
             "\"paclet:DualNumbers/ref/DualFindMinimum\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMinimum works like FindMinimum, but allows \
for Dual numbers in the objective function.\\nDualFindMinimum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindMinimum works like FindMinimum, but allows for Dual numbers in \
the objective function.\nDualFindMinimum does not support constraints on the \
independent variables.", 
    "Documentation" -> <|
     "Local" -> "paclet:DualNumbers/ref/DualFindMinimum"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFindMinimum, {DualNumbers`DualFindMinimum[
         Pattern[DualNumbers`Private`eq$, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec$, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualFindMinimum[
        DualNumbers`Private`eq$, {DualNumbers`Private`spec$}, 
         DualNumbers`Private`rest$], DualNumbers`DualFindMinimum[
         Pattern[DualNumbers`Private`fun$, 
          Except[
           Blank[List]]], 
         Pattern[DualNumbers`Private`spec$, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       Module[{DualNumbers`Private`stdfun$, DualNumbers`Private`stdSol$, 
          DualNumbers`Private`vars$ = Part[DualNumbers`Private`spec$, All, 1],
           DualNumbers`Private`dualSol$}, 
         DualNumbers`Private`stdfun$ = DualNumbers`StandardAll[
            DualNumbers`DualFactor[DualNumbers`Private`fun$]]; 
         DualNumbers`Private`stdSol$ = 
          FindMinimum[
           DualNumbers`Private`stdfun$, DualNumbers`Private`spec$, 
            DualNumbers`Private`rest$]; If[
           Not[
            MatchQ[DualNumbers`Private`stdSol$, {
              PatternTest[
               Blank[], NumericQ], {
               Repeated[Blank[] -> PatternTest[
                  Blank[], NumericQ]]}}]], 
           Return[$Failed, Module]]; DualNumbers`Private`dualSol$ = Quiet[
            DualNumbers`Private`firstSol[
             DualNumbers`FindDualSolution[
              D[DualNumbers`Private`fun$, {DualNumbers`Private`vars$}], 
              Last[DualNumbers`Private`stdSol$]]], {
             MessageName[DualNumbers`FindDualSolution, "nonsol"]}]; If[
           MatchQ[DualNumbers`Private`dualSol$, {
             BlankSequence[Rule]}], {
            ReplaceAll[
            DualNumbers`Private`fun$, DualNumbers`Private`dualSol$], 
            DualNumbers`Private`dualSol$}, DualNumbers`Private`dualSol$]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualFindMinimum, {
      SyntaxInformation[DualNumbers`DualFindMinimum] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFindMinimum"|>, 
   False]]], "Output",ExpressionUUID->"54bf1e9e-9cbb-4bb5-849d-e91784b56ef2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFindMaximum",
              ButtonNote->"paclet:DualNumbers/ref/DualFindMaximum"],
             "\"paclet:DualNumbers/ref/DualFindMaximum\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMaximum works like FindMaximum, but allows \
for Dual numbers in the objective function.\\nDualFindMaximum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DualFindMaximum", "[", 
                    RowBox[{"DualNumbers`Private`eq$_", ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}]}], ",", 
                    "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"DualFindMaximum", "[", 
                    RowBox[{"DualNumbers`Private`eq$", ",", 
                    RowBox[{"{", "DualNumbers`Private`spec$", "}"}], ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DualFindMaximum", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`fun$", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`spec$", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"__", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}],
                     ",", "DualNumbers`Private`rest$___"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"DualNumbers`Private`vars$", "=", 
                    
                    RowBox[{"DualNumbers`Private`spec$", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`stdfun$", "=", 
                    RowBox[{"StandardAll", "[", 
                    RowBox[{"DualFactor", "[", "DualNumbers`Private`fun$", 
                    "]"}], "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`stdSol$", "=", 
                    RowBox[{"FindMaximum", "[", 
                    
                    RowBox[{"DualNumbers`Private`stdfun$", ",", 
                    "DualNumbers`Private`spec$", ",", 
                    "DualNumbers`Private`rest$"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`stdSol$", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"_", "?", "NumericQ"}]}], ")"}], ".."}], "}"}]}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"$Failed", ",", "Module"}], "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`dualSol$", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`firstSol", "[", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[PartialD]", 
                    RowBox[{
                    RowBox[{"{", "DualNumbers`Private`vars$", "}"}]}]], 
                    "DualNumbers`Private`fun$"}], ",", 
                    
                    RowBox[{"Last", "[", "DualNumbers`Private`stdSol$", 
                    "]"}]}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`dualSol$", ",", 
                    RowBox[{"{", "__Rule", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"DualNumbers`Private`fun$", "/.", 
                    "\[VeryThinSpace]", "DualNumbers`Private`dualSol$"}], ",",
                     "DualNumbers`Private`dualSol$"}], "}"}], ",", 
                    "DualNumbers`Private`dualSol$"}], "]"}]}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/DualFindMaximum", 
                    "paclet:DualNumbers/ref/DualFindMaximum", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "DualFindMaximum", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`DualFindMaximum] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`DualFindMaximum\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/DualFindMaximum",
              ButtonNote->"paclet:DualNumbers/ref/DualFindMaximum"],
             "\"paclet:DualNumbers/ref/DualFindMaximum\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DualFindMaximum works like FindMaximum, but allows \
for Dual numbers in the objective function.\\nDualFindMaximum does not \
support constraints on the independent variables.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "DualFindMaximum works like FindMaximum, but allows for Dual numbers in \
the objective function.\nDualFindMaximum does not support constraints on the \
independent variables.", 
    "Documentation" -> <|
     "Local" -> "paclet:DualNumbers/ref/DualFindMaximum"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`DualFindMaximum, {DualNumbers`DualFindMaximum[
         Pattern[DualNumbers`Private`eq$, 
          Blank[]], 
         Pattern[DualNumbers`Private`spec$, {
           Blank[], 
           PatternTest[
            BlankSequence[], NumericQ]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       DualNumbers`DualFindMaximum[
        DualNumbers`Private`eq$, {DualNumbers`Private`spec$}, 
         DualNumbers`Private`rest$], DualNumbers`DualFindMaximum[
         Pattern[DualNumbers`Private`fun$, 
          Except[
           Blank[List]]], 
         Pattern[DualNumbers`Private`spec$, {
           Repeated[{
             Blank[], 
             PatternTest[
              BlankSequence[], NumericQ]}]}], 
         Pattern[DualNumbers`Private`rest$, 
          BlankNullSequence[]]] :> 
       Module[{DualNumbers`Private`stdfun$, DualNumbers`Private`stdSol$, 
          DualNumbers`Private`vars$ = Part[DualNumbers`Private`spec$, All, 1],
           DualNumbers`Private`dualSol$}, 
         DualNumbers`Private`stdfun$ = DualNumbers`StandardAll[
            DualNumbers`DualFactor[DualNumbers`Private`fun$]]; 
         DualNumbers`Private`stdSol$ = 
          FindMaximum[
           DualNumbers`Private`stdfun$, DualNumbers`Private`spec$, 
            DualNumbers`Private`rest$]; If[
           Not[
            MatchQ[DualNumbers`Private`stdSol$, {
              PatternTest[
               Blank[], NumericQ], {
               Repeated[Blank[] -> PatternTest[
                  Blank[], NumericQ]]}}]], 
           Return[$Failed, Module]]; DualNumbers`Private`dualSol$ = Quiet[
            DualNumbers`Private`firstSol[
             DualNumbers`FindDualSolution[
              D[DualNumbers`Private`fun$, {DualNumbers`Private`vars$}], 
              Last[DualNumbers`Private`stdSol$]]], {
             MessageName[DualNumbers`FindDualSolution, "nonsol"]}]; If[
           MatchQ[DualNumbers`Private`dualSol$, {
             BlankSequence[Rule]}], {
            ReplaceAll[
            DualNumbers`Private`fun$, DualNumbers`Private`dualSol$], 
            DualNumbers`Private`dualSol$}, DualNumbers`Private`dualSol$]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`DualFindMaximum, {
      SyntaxInformation[DualNumbers`DualFindMaximum] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`DualFindMaximum"|>, 
   False]]], "Output",ExpressionUUID->"e9471c3d-cc56-4daf-ad7c-25a5a00e3506"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/FindDualSolution",
              ButtonNote->"paclet:DualNumbers/ref/FindDualSolution"],
             "\"paclet:DualNumbers/ref/FindDualSolution\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FindDualSolution[\\!\\(\\*StyleBox[\\\"eqs\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"sol\\\", \\\"TI\\\"]\\)] finds a \
Dual-valued solution to \\!\\(\\*StyleBox[\\\"eqs\\\", \\\"TI\\\"]\\) where \
\\!\\(\\*StyleBox[\\\"sol\\\", \\\"TI\\\"]\\) is the standard-valued \
solution.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FindDualSolution", "[", 
                    
                    RowBox[{
                    "DualNumbers`Private`eqs_", ",", 
                    "DualNumbers`Private`rule_Rule"}], "]"}], ":=", 
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{"DualNumbers`Private`eqs", ",", 
                    RowBox[{"{", "DualNumbers`Private`rule", "}"}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FindDualSolution", "[", 
                    RowBox[{"DualNumbers`Private`eqs_", ",", 
                    RowBox[{"DualNumbers`Private`sol", ":", 
                    RowBox[{"{", "__Rule", "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    
                    RowBox[{"DualNumbers`Private`equationNormalForm", "[", 
                    "DualNumbers`Private`eqs", "]"}]}], ",", 
                    RowBox[{"DualNumbers`Private`vars", "=", 
                    RowBox[{"Keys", "[", "DualNumbers`Private`sol", "]"}]}], 
                    ",", "DualNumbers`Private`dualRules", ",", 
                    "DualNumbers`Private`nonstdSol"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"FailureQ", "[", "DualNumbers`Private`equations", 
                    "]"}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"$Failed", ",", "Module"}], "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`dualRules", "=", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"DualNumbers`Private`vars", "\[Rule]", 
                    RowBox[{
                    RowBox[{"Values", "[", "DualNumbers`Private`sol", "]"}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{"0", "+", 
                    RowBox[{"#1", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[0, #]], "&"}], ")"}], "/@", 
                    "DualNumbers`Private`vars"}]}]}], "]"}]}], ";", 
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    RowBox[{"DualFactor", "[", 
                    
                    RowBox[{"Subtract", "@@@", 
                    "DualNumbers`Private`equations"}], "]"}], "/.", 
                    "\[VeryThinSpace]", "DualNumbers`Private`dualRules"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`equations", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{"EqualTo", "[", "0", "]"}], ")"}]}], "+", 
                    RowBox[{"_", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    PatternTest[
                    Blank[], 
                    EqualTo[0]], 
                    Blank[]]], ".."}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`equations", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    RowBox[{"_", "?", "PossibleZeroQ"}], "+", 
                    RowBox[{"_", " ", "\[CurlyEpsilon]"}]}], 
                    DualNumbers`Dual[
                    PatternTest[
                    Blank[], PossibleZeroQ], 
                    Blank[]]], ".."}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FindDualSolution", "::", "nonsol"}], 
                    "MessageName"], ",", 
                    RowBox[{"Short", "[", "DualNumbers`Private`sol", "]"}]}], 
                    "]"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"DualNumbers`Private`equations", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NonStandard", "[", "#1", "]"}], "\[Equal]", 
                    "0"}], "&"}], ")"}], "/@", 
                    "DualNumbers`Private`equations"}]}], ";", 
                    RowBox[{"DualNumbers`Private`nonstdSol", "=", 
                    RowBox[{"Solve", "[", 
                    
                    RowBox[{"DualNumbers`Private`equations", ",", 
                    "DualNumbers`Private`vars"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"DualNumbers`Private`nonstdSol", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__Rule", "}"}], ".."}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"DualNumbers`Private`vars", "\[Rule]", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Dual", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Lookup", "[", 
                    
                    RowBox[{"DualNumbers`Private`sol", ",", 
                    "DualNumbers`Private`vars"}], "]"}], ",", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{"#1", ",", "DualNumbers`Private`vars", ",", "0"}],
                     "]"}]}], "}"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
                    "DualNumbers`Private`nonstdSol"}], ",", "$Failed"}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:DualNumbers/ref/FindDualSolution", 
                    "paclet:DualNumbers/ref/FindDualSolution", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "FindDualSolution", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[DualNumbers`FindDualSolution] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"DualNumbers`FindDualSolution\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:DualNumbers/ref/FindDualSolution",
              ButtonNote->"paclet:DualNumbers/ref/FindDualSolution"],
             "\"paclet:DualNumbers/ref/FindDualSolution\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FindDualSolution[\\!\\(\\*StyleBox[\\\"eqs\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"sol\\\", \\\"TI\\\"]\\)] finds a \
Dual-valued solution to \\!\\(\\*StyleBox[\\\"eqs\\\", \\\"TI\\\"]\\) where \
\\!\\(\\*StyleBox[\\\"sol\\\", \\\"TI\\\"]\\) is the standard-valued \
solution.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FindDualSolution[\!\(\*StyleBox[\"eqs\", \"TI\"]\), \!\(\*StyleBox[\"sol\
\", \"TI\"]\)] finds a Dual-valued solution to \!\(\*StyleBox[\"eqs\", \
\"TI\"]\) where \!\(\*StyleBox[\"sol\", \"TI\"]\) is the standard-valued \
solution.", 
    "Documentation" -> <|
     "Local" -> "paclet:DualNumbers/ref/FindDualSolution"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, DualNumbers`FindDualSolution, {DualNumbers`FindDualSolution[
         Pattern[DualNumbers`Private`eqs, 
          Blank[]], 
         Pattern[DualNumbers`Private`rule, 
          Blank[Rule]]] :> 
       DualNumbers`FindDualSolution[
        DualNumbers`Private`eqs, {DualNumbers`Private`rule}], 
       DualNumbers`FindDualSolution[
         Pattern[DualNumbers`Private`eqs, 
          Blank[]], 
         Pattern[DualNumbers`Private`sol, {
           BlankSequence[Rule]}]] :> 
       Module[{DualNumbers`Private`equations = 
          DualNumbers`Private`equationNormalForm[DualNumbers`Private`eqs], 
          DualNumbers`Private`vars = Keys[DualNumbers`Private`sol], 
          DualNumbers`Private`dualRules, DualNumbers`Private`nonstdSol}, If[
           FailureQ[DualNumbers`Private`equations], 
           Return[$Failed, Module]]; 
         DualNumbers`Private`dualRules = 
          Thread[DualNumbers`Private`vars -> 
            Values[DualNumbers`Private`sol] + 
             Map[DualNumbers`Dual[0, #]& , DualNumbers`Private`vars]]; 
         DualNumbers`Private`equations = ReplaceAll[
            DualNumbers`DualFactor[
             MapApply[Subtract, DualNumbers`Private`equations]], 
            DualNumbers`Private`dualRules]; If[
           Not[
            MatchQ[DualNumbers`Private`equations, {
              Repeated[
               DualNumbers`Dual[
                PatternTest[
                 Blank[], 
                 EqualTo[0]], 
                Blank[]]]}]], 
           If[
            Not[
             MatchQ[DualNumbers`Private`equations, {
               Repeated[
                DualNumbers`Dual[
                 PatternTest[
                  Blank[], PossibleZeroQ], 
                 Blank[]]]}]], 
            Message[
             MessageName[DualNumbers`FindDualSolution, "nonsol"], 
             Short[DualNumbers`Private`sol]]]]; 
         DualNumbers`Private`equations = 
          Map[DualNumbers`NonStandard[#] == 0& , 
            DualNumbers`Private`equations]; 
         DualNumbers`Private`nonstdSol = 
          Solve[DualNumbers`Private`equations, DualNumbers`Private`vars]; If[
           MatchQ[DualNumbers`Private`nonstdSol, {
             Repeated[{
               BlankSequence[Rule]}]}], 
           Map[Thread[DualNumbers`Private`vars -> MapThread[DualNumbers`Dual, {
                Lookup[DualNumbers`Private`sol, DualNumbers`Private`vars], 
                Lookup[#, DualNumbers`Private`vars, 0]}]]& , 
            DualNumbers`Private`nonstdSol], $Failed]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, DualNumbers`FindDualSolution, {
      SyntaxInformation[DualNumbers`FindDualSolution] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "DualNumbers`FindDualSolution"|>, 
   False]]], "Output",ExpressionUUID->"e5865272-94f6-43ef-99be-a11ea630937f"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Running tests", \
"Section",ExpressionUUID->"e401cf21-84a6-462d-aad9-92e779a9dd14"],

Cell["Check the version currently loaded:", \
"Text",ExpressionUUID->"50be5f08-ccff-43d3-9d84-a54889af7a6e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DualNumbers`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletObject", "[", "\"\<DualNumbers\>\"", "]"}], "[", 
  "\"\<Version\>\"", 
  "]"}]}], "Input",ExpressionUUID->"fcd1bea9-7ea9-4a34-80f4-b34bc4b8a10b"],

Cell[BoxData[
 RowBox[{"testReport", "=", 
  RowBox[{"TestReport", "[", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.wlt\>\"", ",", 
     RowBox[{
      RowBox[{"PacletObject", "[", "\"\<DualNumbers\>\"", "]"}], "[", 
      RowBox[{"\"\<AssetLocation\>\"", ",", "\"\<TestDirectory\>\""}], 
      "]"}]}], "]"}], 
   "]"}]}]], "Input",ExpressionUUID->"d9d61efc-e8e1-477d-8624-f934d35adb63"],

Cell["\<\
Reset docked cells in testing notebooks (this can help if the testing \
notebooks become slow):\
\>", "Text",ExpressionUUID->"2e597dde-62c2-4905-9ee0-88d7c86050a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"#", ",", 
      RowBox[{"DockedCells", "\[Rule]", "Inherited"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Notebooks", "[", "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"f02bec0c-c9d4-4217-a676-fc3261674141"]
}, Closed]],

Cell[CellGroupData[{

Cell["Re-building the paclet", \
"Section",ExpressionUUID->"b17fd04e-5216-4de6-9df2-053310fbcad6"],

Cell["This will create a simple archive without documentation:", \
"Text",ExpressionUUID->"a6bc7406-af3f-4d55-8fda-f1f222735969"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CreatePacletArchive", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DualNumbers\>\""}], 
     "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FileNameTake", "[", "%", 
  "]"}]}], "Input",ExpressionUUID->"40eb1cdb-cbf5-4009-94db-f10d3cd02e26"],

Cell[TextData[{
 "This will build the paclet including the documentation pages. The result \
will be placed in the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{".", 
     StyleBox[
      RowBox[{"/", "DualNumbers"}],
      FontWeight->"Bold"]}], 
    StyleBox["/",
     FontWeight->"Bold"], 
    StyleBox["build",
     FontWeight->"Bold"]}], TraditionalForm]],ExpressionUUID->
  "8bf18102-b751-4574-8473-64294d3503fd"],
 " subdirectory (which is not tracked by git):"
}], "Text",ExpressionUUID->"1ed33cf2-9889-477d-ac2d-9b897b8346e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<PacletTools`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PacletBuild", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DualNumbers\>\""}], 
    "}"}], "]"}], 
  "]"}]}], "Input",ExpressionUUID->"683fcd1e-e78c-4556-94ab-8cf6dea606e4"],

Cell["Inspect the build results:", \
"Text",ExpressionUUID->"e9d9f284-7b1a-448a-91ac-f005b72faf81"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DualNumbers\>\"", 
     ",", "\"\<build\>\""}], "}"}], "]"}], 
  "]"}]], "Input",ExpressionUUID->"1fa01895-2934-427c-8169-6030674e64cd"],

Cell[TextData[{
 "To write documentation, use the ",
 Cell[BoxData[
  FormBox[
   StyleBox["DocumentationTools`",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "2f9ebe75-590b-4a7f-887d-37d3703b3ea9"],
 " palette:"
}], "Text",ExpressionUUID->"75a4296a-5669-4af1-9a32-418ff9263821"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DocumentationTools`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OpenDocumentationToolsPalette", "[", "]"}], 
  ";"}]}], "Input",ExpressionUUID->"3f72e2c7-bc89-4a7c-9c21-969428ced8de"],

Cell[TextData[{
 "Be sure to use the ",
 Cell[BoxData[
  FormBox["\"\<Add Paclet\[Ellipsis]\>\"", TraditionalForm]],ExpressionUUID->
  "54c39604-2294-4826-b4c2-36bd2b5ac059"],
 " button in the palette to add the ",
 Cell[BoxData[
  FormBox[
   RowBox[{".", 
    StyleBox[
     RowBox[{"/", "DualNumbers"}],
     FontWeight->"Bold"]}], TraditionalForm]],ExpressionUUID->
  "158d21ff-ea3e-4d75-937d-5fa2b7a3a701"],
 " directory (i.e., the directory containing ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"PacletInfo", ".", "wl"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "a3f88867-0168-4f47-87bb-b098e8cd7e97"],
 ")."
}], "Text",ExpressionUUID->"68bd7a3a-e90c-484f-b165-ace7ba0a33e7"],

Cell["To test the documentation after building, you can:", \
"Text",ExpressionUUID->"e846a306-a4a4-4fef-91df-985605b54994"],

Cell[CellGroupData[{

Cell[TextData[{
 "Temporarily load the build directory with ",
 Cell[BoxData[
  FormBox[
   StyleBox["PacletDirectoryLoad",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "8728a579-a0ca-45ff-a609-bdf5140f4872"],
 ":"
}], "Item",ExpressionUUID->"961c308d-ca1d-4c6d-b3cc-f5e3b7c2cb8c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DualNumbers\>\"", 
      ",", "\"\<build\>\""}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", 
  "DualNumbers`"}]}], \
"Input",ExpressionUUID->"af87cf35-c2c7-42d8-8702-86609261e753"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Install the ",
 Cell[BoxData[
  FormBox[
   RowBox[{".", "paclet"}], TraditionalForm]],ExpressionUUID->
  "0058aa42-9d8a-4671-a481-0fcde106edca"],
 " file with ",
 Cell[BoxData[
  FormBox[
   StyleBox["PacletInstall",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "eb15706b-7906-416a-ba17-8ae24a8df163"],
 " or you can temporarily load the build directory with ",
 Cell[BoxData[
  FormBox[
   StyleBox["PacletDirectoryLoad",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "707ab3c4-4f1e-4457-8f93-2aae8a170e98"],
 ":"
}], "Item",ExpressionUUID->"07c14d54-ba84-4ba0-a434-21a41324ca7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pacletFile", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<*.paclet\>\"", ",", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<DualNumbers\>\"",
           ",", "\"\<build\>\""}], "}"}], "]"}]}], "]"}], ",", "$Failed"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"And", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringQ", "[", "pacletFile", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"TrueQ", "@", 
      RowBox[{"ChoiceDialog", "[", 
       RowBox[{
       "\"\<Are you sure you want to install\\n\>\"", "<>", "pacletFile"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PacletInstall", "[", "pacletFile", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"<<", "DualNumbers`"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",ExpressionUUID->"4c7af375-e69f-4ccb-921d-0b9d9a9bfe87"]
}, Open  ]],

Cell["\<\
You may need to restart the kernel to pick up the newly installed paclet. \
After that, you can load it with:\
\>", "Text",ExpressionUUID->"3460d80e-2076-46b0-b0f2-57bce3efa34c"],

Cell[BoxData[
 RowBox[{"<<", "DualNumbers`", " ", 
  RowBox[{"(*", 
   RowBox[{
   "Load", " ", "in", " ", "a", " ", "fresh", " ", "kernel", " ", "after", 
    " ", "installing"}], " ", 
   "*)"}]}]], "Input",ExpressionUUID->"9be2c07e-f561-4c04-8305-e2fc6c3acc53"],

Cell[TextData[{
 "If the documentation build and paclet installation were successful, you \
should be able to use the standard Mathematica shortcuts to find the new \
documentation. For example, try finding ",
 Cell[BoxData[
  FormBox[
   StyleBox["Dual",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "d77ef51a-dfae-43b8-aa8c-d400b44ab21d"],
 " in the documentation browser."
}], "Text",ExpressionUUID->"8c06e411-5fe7-48e6-a092-17a798fbb5e1"],

Cell["To uninstall again (if necessary):", \
"Text",ExpressionUUID->"67743de5-39c1-4424-9915-d826071c26af"],

Cell[BoxData[
 RowBox[{"PacletUninstall", "[", "\"\<DualNumbers\>\"", 
  "]"}]], "Input",ExpressionUUID->"fe46789e-4b7b-42ae-b9fe-c46c17c425a9"]
}, Closed]]
},
WindowSize->{1236.75, 676.5},
WindowMargins->{{94.5, Automatic}, {Automatic, 22.5}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TaggingRules->{"SaveDialogDataSavesBlog" -> False, "TryRealOnly" -> False},
ShowCellLabel->True,
CellLabelAutoDelete->True,
TrackCellChangeTimes->False,
Magnification:>1. Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9220aa73-8720-4446-a63d-8589ef2eb51f"
]

